const std = @import("std");
const builtin = @import("builtin");
// pub const c = @import("c");
pub const c = @cImport(@cInclude("GL/gl.h"));

pub const APIENTRY: std.builtin.CallingConvention = if (builtin.os.tag == .windows) .winapi else .c;

pub const GLenum = c_uint;
pub const GLboolean = u8;
pub const GLbitfield = c_uint;
pub const GLvoid = anyopaque;
pub const GLbyte = i8;
pub const GLshort = c_short;
pub const GLint = c_int;
pub const GLubyte = u8;
pub const GLushort = c_ushort;
pub const GLuint = c_uint;
pub const GLsizei = c_int;
pub const GLfloat = f32;
pub const GLclampf = f32;
pub const GLdouble = f64;
pub const GLclampd = f64;

glClearIndex: *const fn (c: GLfloat) callconv(APIENTRY) void,
glClearColor: *const fn (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) callconv(APIENTRY) void,
glClear: *const fn (mask: GLbitfield) callconv(APIENTRY) void,
glIndexMask: *const fn (mask: GLuint) callconv(APIENTRY) void,
glColorMask: *const fn (red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) callconv(APIENTRY) void,
glAlphaFunc: *const fn (func: GLenum, ref: GLclampf) callconv(APIENTRY) void,
glBlendFunc: *const fn (sfactor: GLenum, dfactor: GLenum) callconv(APIENTRY) void,
glLogicOp: *const fn (opcode: GLenum) callconv(APIENTRY) void,
glCullFace: *const fn (mode: GLenum) callconv(APIENTRY) void,
glFrontFace: *const fn (mode: GLenum) callconv(APIENTRY) void,
glPointSize: *const fn (size: GLfloat) callconv(APIENTRY) void,
glLineWidth: *const fn (width: GLfloat) callconv(APIENTRY) void,
glLineStipple: *const fn (factor: GLint, pattern: GLushort) callconv(APIENTRY) void,
glPolygonMode: *const fn (face: GLenum, mode: GLenum) callconv(APIENTRY) void,
glPolygonOffset: *const fn (factor: GLfloat, units: GLfloat) callconv(APIENTRY) void,
glPolygonStipple: *const fn (mask: [*c]const GLubyte) callconv(APIENTRY) void,
glGetPolygonStipple: *const fn (mask: [*c]GLubyte) callconv(APIENTRY) void,
glEdgeFlag: *const fn (flag: GLboolean) callconv(APIENTRY) void,
glEdgeFlagv: *const fn (flag: [*c]const GLboolean) callconv(APIENTRY) void,
glScissor: *const fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei) callconv(APIENTRY) void,
glClipPlane: *const fn (plane: GLenum, equation: [*c]const GLdouble) callconv(APIENTRY) void,
glGetClipPlane: *const fn (plane: GLenum, equation: [*c]GLdouble) callconv(APIENTRY) void,
glDrawBuffer: *const fn (mode: GLenum) callconv(APIENTRY) void,
glReadBuffer: *const fn (mode: GLenum) callconv(APIENTRY) void,
glEnable: *const fn (cap: GLenum) callconv(APIENTRY) void,
glDisable: *const fn (cap: GLenum) callconv(APIENTRY) void,
glIsEnabled: *const fn (cap: GLenum) callconv(APIENTRY) GLboolean,
glEnableClientState: *const fn (cap: GLenum) callconv(APIENTRY) void,
glDisableClientState: *const fn (cap: GLenum) callconv(APIENTRY) void,
glGetBooleanv: *const fn (pname: GLenum, params: [*c]GLboolean) callconv(APIENTRY) void,
glGetDoublev: *const fn (pname: GLenum, params: [*c]GLdouble) callconv(APIENTRY) void,
glGetFloatv: *const fn (pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetIntegerv: *const fn (pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glPushAttrib: *const fn (mask: GLbitfield) callconv(APIENTRY) void,
glPopAttrib: *const fn () callconv(APIENTRY) void,
glPushClientAttrib: *const fn (mask: GLbitfield) callconv(APIENTRY) void,
glPopClientAttrib: *const fn () callconv(APIENTRY) void,
glRenderMode: *const fn (mode: GLenum) callconv(APIENTRY) GLint,
glGetError: *const fn () callconv(APIENTRY) GLenum,
glGetString: *const fn (name: GLenum) callconv(APIENTRY) [*c]const GLubyte,
glFinish: *const fn () callconv(APIENTRY) void,
glFlush: *const fn () callconv(APIENTRY) void,
glHint: *const fn (target: GLenum, mode: GLenum) callconv(APIENTRY) void,
glClearDepth: *const fn (depth: GLclampd) callconv(APIENTRY) void,
glDepthFunc: *const fn (func: GLenum) callconv(APIENTRY) void,
glDepthMask: *const fn (flag: GLboolean) callconv(APIENTRY) void,
glDepthRange: *const fn (near_val: GLclampd, far_val: GLclampd) callconv(APIENTRY) void,
glClearAccum: *const fn (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) callconv(APIENTRY) void,
glAccum: *const fn (op: GLenum, value: GLfloat) callconv(APIENTRY) void,
glMatrixMode: *const fn (mode: GLenum) callconv(APIENTRY) void,
glOrtho: *const fn (left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, near_val: GLdouble, far_val: GLdouble) callconv(APIENTRY) void,
glFrustum: *const fn (left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, near_val: GLdouble, far_val: GLdouble) callconv(APIENTRY) void,
glViewport: *const fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei) callconv(APIENTRY) void,
glPushMatrix: *const fn () callconv(APIENTRY) void,
glPopMatrix: *const fn () callconv(APIENTRY) void,
glLoadIdentity: *const fn () callconv(APIENTRY) void,
glLoadMatrixd: *const fn (m: [*c]const GLdouble) callconv(APIENTRY) void,
glLoadMatrixf: *const fn (m: [*c]const GLfloat) callconv(APIENTRY) void,
glMultMatrixd: *const fn (m: [*c]const GLdouble) callconv(APIENTRY) void,
glMultMatrixf: *const fn (m: [*c]const GLfloat) callconv(APIENTRY) void,
glRotated: *const fn (angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) callconv(APIENTRY) void,
glRotatef: *const fn (angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) callconv(APIENTRY) void,
glScaled: *const fn (x: GLdouble, y: GLdouble, z: GLdouble) callconv(APIENTRY) void,
glScalef: *const fn (x: GLfloat, y: GLfloat, z: GLfloat) callconv(APIENTRY) void,
glTranslated: *const fn (x: GLdouble, y: GLdouble, z: GLdouble) callconv(APIENTRY) void,
glTranslatef: *const fn (x: GLfloat, y: GLfloat, z: GLfloat) callconv(APIENTRY) void,
glIsList: *const fn (list: GLuint) callconv(APIENTRY) GLboolean,
glDeleteLists: *const fn (list: GLuint, range: GLsizei) callconv(APIENTRY) void,
glGenLists: *const fn (range: GLsizei) callconv(APIENTRY) GLuint,
glNewList: *const fn (list: GLuint, mode: GLenum) callconv(APIENTRY) void,
glEndList: *const fn () callconv(APIENTRY) void,
glCallList: *const fn (list: GLuint) callconv(APIENTRY) void,
glCallLists: *const fn (n: GLsizei, @"type": GLenum, lists: ?*const GLvoid) callconv(APIENTRY) void,
glListBase: *const fn (base: GLuint) callconv(APIENTRY) void,
glBegin: *const fn (mode: GLenum) callconv(APIENTRY) void,
glEnd: *const fn () callconv(APIENTRY) void,
glVertex2d: *const fn (x: GLdouble, y: GLdouble) callconv(APIENTRY) void,
glVertex2f: *const fn (x: GLfloat, y: GLfloat) callconv(APIENTRY) void,
glVertex2i: *const fn (x: GLint, y: GLint) callconv(APIENTRY) void,
glVertex2s: *const fn (x: GLshort, y: GLshort) callconv(APIENTRY) void,
glVertex3d: *const fn (x: GLdouble, y: GLdouble, z: GLdouble) callconv(APIENTRY) void,
glVertex3f: *const fn (x: GLfloat, y: GLfloat, z: GLfloat) callconv(APIENTRY) void,
glVertex3i: *const fn (x: GLint, y: GLint, z: GLint) callconv(APIENTRY) void,
glVertex3s: *const fn (x: GLshort, y: GLshort, z: GLshort) callconv(APIENTRY) void,
glVertex4d: *const fn (x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) callconv(APIENTRY) void,
glVertex4f: *const fn (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) callconv(APIENTRY) void,
glVertex4i: *const fn (x: GLint, y: GLint, z: GLint, w: GLint) callconv(APIENTRY) void,
glVertex4s: *const fn (x: GLshort, y: GLshort, z: GLshort, w: GLshort) callconv(APIENTRY) void,
glVertex2dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glVertex2fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glVertex2iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glVertex2sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glVertex3dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glVertex3fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glVertex3iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glVertex3sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glVertex4dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glVertex4fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glVertex4iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glVertex4sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glNormal3b: *const fn (nx: GLbyte, ny: GLbyte, nz: GLbyte) callconv(APIENTRY) void,
glNormal3d: *const fn (nx: GLdouble, ny: GLdouble, nz: GLdouble) callconv(APIENTRY) void,
glNormal3f: *const fn (nx: GLfloat, ny: GLfloat, nz: GLfloat) callconv(APIENTRY) void,
glNormal3i: *const fn (nx: GLint, ny: GLint, nz: GLint) callconv(APIENTRY) void,
glNormal3s: *const fn (nx: GLshort, ny: GLshort, nz: GLshort) callconv(APIENTRY) void,
glNormal3bv: *const fn (v: [*c]const GLbyte) callconv(APIENTRY) void,
glNormal3dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glNormal3fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glNormal3iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glNormal3sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glIndexd: *const fn (c: GLdouble) callconv(APIENTRY) void,
glIndexf: *const fn (c: GLfloat) callconv(APIENTRY) void,
glIndexi: *const fn (c: GLint) callconv(APIENTRY) void,
glIndexs: *const fn (c: GLshort) callconv(APIENTRY) void,
glIndexub: *const fn (c: GLubyte) callconv(APIENTRY) void,
glIndexdv: *const fn (c: [*c]const GLdouble) callconv(APIENTRY) void,
glIndexfv: *const fn (c: [*c]const GLfloat) callconv(APIENTRY) void,
glIndexiv: *const fn (c: [*c]const GLint) callconv(APIENTRY) void,
glIndexsv: *const fn (c: [*c]const GLshort) callconv(APIENTRY) void,
glIndexubv: *const fn (c: [*c]const GLubyte) callconv(APIENTRY) void,
glColor3b: *const fn (red: GLbyte, green: GLbyte, blue: GLbyte) callconv(APIENTRY) void,
glColor3d: *const fn (red: GLdouble, green: GLdouble, blue: GLdouble) callconv(APIENTRY) void,
glColor3f: *const fn (red: GLfloat, green: GLfloat, blue: GLfloat) callconv(APIENTRY) void,
glColor3i: *const fn (red: GLint, green: GLint, blue: GLint) callconv(APIENTRY) void,
glColor3s: *const fn (red: GLshort, green: GLshort, blue: GLshort) callconv(APIENTRY) void,
glColor3ub: *const fn (red: GLubyte, green: GLubyte, blue: GLubyte) callconv(APIENTRY) void,
glColor3ui: *const fn (red: GLuint, green: GLuint, blue: GLuint) callconv(APIENTRY) void,
glColor3us: *const fn (red: GLushort, green: GLushort, blue: GLushort) callconv(APIENTRY) void,
glColor4b: *const fn (red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) callconv(APIENTRY) void,
glColor4d: *const fn (red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) callconv(APIENTRY) void,
glColor4f: *const fn (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) callconv(APIENTRY) void,
glColor4i: *const fn (red: GLint, green: GLint, blue: GLint, alpha: GLint) callconv(APIENTRY) void,
glColor4s: *const fn (red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) callconv(APIENTRY) void,
glColor4ub: *const fn (red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) callconv(APIENTRY) void,
glColor4ui: *const fn (red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) callconv(APIENTRY) void,
glColor4us: *const fn (red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) callconv(APIENTRY) void,
glColor3bv: *const fn (v: [*c]const GLbyte) callconv(APIENTRY) void,
glColor3dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glColor3fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glColor3iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glColor3sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glColor3ubv: *const fn (v: [*c]const GLubyte) callconv(APIENTRY) void,
glColor3uiv: *const fn (v: [*c]const GLuint) callconv(APIENTRY) void,
glColor3usv: *const fn (v: [*c]const GLushort) callconv(APIENTRY) void,
glColor4bv: *const fn (v: [*c]const GLbyte) callconv(APIENTRY) void,
glColor4dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glColor4fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glColor4iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glColor4sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glColor4ubv: *const fn (v: [*c]const GLubyte) callconv(APIENTRY) void,
glColor4uiv: *const fn (v: [*c]const GLuint) callconv(APIENTRY) void,
glColor4usv: *const fn (v: [*c]const GLushort) callconv(APIENTRY) void,
glTexCoord1d: *const fn (s: GLdouble) callconv(APIENTRY) void,
glTexCoord1f: *const fn (s: GLfloat) callconv(APIENTRY) void,
glTexCoord1i: *const fn (s: GLint) callconv(APIENTRY) void,
glTexCoord1s: *const fn (s: GLshort) callconv(APIENTRY) void,
glTexCoord2d: *const fn (s: GLdouble, t: GLdouble) callconv(APIENTRY) void,
glTexCoord2f: *const fn (s: GLfloat, t: GLfloat) callconv(APIENTRY) void,
glTexCoord2i: *const fn (s: GLint, t: GLint) callconv(APIENTRY) void,
glTexCoord2s: *const fn (s: GLshort, t: GLshort) callconv(APIENTRY) void,
glTexCoord3d: *const fn (s: GLdouble, t: GLdouble, r: GLdouble) callconv(APIENTRY) void,
glTexCoord3f: *const fn (s: GLfloat, t: GLfloat, r: GLfloat) callconv(APIENTRY) void,
glTexCoord3i: *const fn (s: GLint, t: GLint, r: GLint) callconv(APIENTRY) void,
glTexCoord3s: *const fn (s: GLshort, t: GLshort, r: GLshort) callconv(APIENTRY) void,
glTexCoord4d: *const fn (s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) callconv(APIENTRY) void,
glTexCoord4f: *const fn (s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) callconv(APIENTRY) void,
glTexCoord4i: *const fn (s: GLint, t: GLint, r: GLint, q: GLint) callconv(APIENTRY) void,
glTexCoord4s: *const fn (s: GLshort, t: GLshort, r: GLshort, q: GLshort) callconv(APIENTRY) void,
glTexCoord1dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glTexCoord1fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glTexCoord1iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glTexCoord1sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glTexCoord2dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glTexCoord2fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glTexCoord2iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glTexCoord2sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glTexCoord3dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glTexCoord3fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glTexCoord3iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glTexCoord3sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glTexCoord4dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glTexCoord4fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glTexCoord4iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glTexCoord4sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glRasterPos2d: *const fn (x: GLdouble, y: GLdouble) callconv(APIENTRY) void,
glRasterPos2f: *const fn (x: GLfloat, y: GLfloat) callconv(APIENTRY) void,
glRasterPos2i: *const fn (x: GLint, y: GLint) callconv(APIENTRY) void,
glRasterPos2s: *const fn (x: GLshort, y: GLshort) callconv(APIENTRY) void,
glRasterPos3d: *const fn (x: GLdouble, y: GLdouble, z: GLdouble) callconv(APIENTRY) void,
glRasterPos3f: *const fn (x: GLfloat, y: GLfloat, z: GLfloat) callconv(APIENTRY) void,
glRasterPos3i: *const fn (x: GLint, y: GLint, z: GLint) callconv(APIENTRY) void,
glRasterPos3s: *const fn (x: GLshort, y: GLshort, z: GLshort) callconv(APIENTRY) void,
glRasterPos4d: *const fn (x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) callconv(APIENTRY) void,
glRasterPos4f: *const fn (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) callconv(APIENTRY) void,
glRasterPos4i: *const fn (x: GLint, y: GLint, z: GLint, w: GLint) callconv(APIENTRY) void,
glRasterPos4s: *const fn (x: GLshort, y: GLshort, z: GLshort, w: GLshort) callconv(APIENTRY) void,
glRasterPos2dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glRasterPos2fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glRasterPos2iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glRasterPos2sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glRasterPos3dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glRasterPos3fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glRasterPos3iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glRasterPos3sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glRasterPos4dv: *const fn (v: [*c]const GLdouble) callconv(APIENTRY) void,
glRasterPos4fv: *const fn (v: [*c]const GLfloat) callconv(APIENTRY) void,
glRasterPos4iv: *const fn (v: [*c]const GLint) callconv(APIENTRY) void,
glRasterPos4sv: *const fn (v: [*c]const GLshort) callconv(APIENTRY) void,
glRectd: *const fn (x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) callconv(APIENTRY) void,
glRectf: *const fn (x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) callconv(APIENTRY) void,
glRecti: *const fn (x1: GLint, y1: GLint, x2: GLint, y2: GLint) callconv(APIENTRY) void,
glRects: *const fn (x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) callconv(APIENTRY) void,
glRectdv: *const fn (v1: [*c]const GLdouble, v2: [*c]const GLdouble) callconv(APIENTRY) void,
glRectfv: *const fn (v1: [*c]const GLfloat, v2: [*c]const GLfloat) callconv(APIENTRY) void,
glRectiv: *const fn (v1: [*c]const GLint, v2: [*c]const GLint) callconv(APIENTRY) void,
glRectsv: *const fn (v1: [*c]const GLshort, v2: [*c]const GLshort) callconv(APIENTRY) void,
glVertexPointer: *const fn (size: GLint, @"type": GLenum, stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glNormalPointer: *const fn (@"type": GLenum, stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glColorPointer: *const fn (size: GLint, @"type": GLenum, stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glIndexPointer: *const fn (@"type": GLenum, stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glTexCoordPointer: *const fn (size: GLint, @"type": GLenum, stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glEdgeFlagPointer: *const fn (stride: GLsizei, ptr: ?*const GLvoid) callconv(APIENTRY) void,
glGetPointerv: *const fn (pname: GLenum, params: [*c]?*GLvoid) callconv(APIENTRY) void,
glArrayElement: *const fn (i: GLint) callconv(APIENTRY) void,
glDrawArrays: *const fn (mode: GLenum, first: GLint, count: GLsizei) callconv(APIENTRY) void,
glDrawElements: *const fn (mode: GLenum, count: GLsizei, @"type": GLenum, indices: ?*const GLvoid) callconv(APIENTRY) void,
glInterleavedArrays: *const fn (format: GLenum, stride: GLsizei, pointer: ?*const GLvoid) callconv(APIENTRY) void,
glShadeModel: *const fn (mode: GLenum) callconv(APIENTRY) void,
glLightf: *const fn (light: GLenum, pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glLighti: *const fn (light: GLenum, pname: GLenum, param: GLint) callconv(APIENTRY) void,
glLightfv: *const fn (light: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glLightiv: *const fn (light: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glGetLightfv: *const fn (light: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetLightiv: *const fn (light: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glLightModelf: *const fn (pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glLightModeli: *const fn (pname: GLenum, param: GLint) callconv(APIENTRY) void,
glLightModelfv: *const fn (pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glLightModeliv: *const fn (pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glMaterialf: *const fn (face: GLenum, pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glMateriali: *const fn (face: GLenum, pname: GLenum, param: GLint) callconv(APIENTRY) void,
glMaterialfv: *const fn (face: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glMaterialiv: *const fn (face: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glGetMaterialfv: *const fn (face: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetMaterialiv: *const fn (face: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glColorMaterial: *const fn (face: GLenum, mode: GLenum) callconv(APIENTRY) void,
glPixelZoom: *const fn (xfactor: GLfloat, yfactor: GLfloat) callconv(APIENTRY) void,
glPixelStoref: *const fn (pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glPixelStorei: *const fn (pname: GLenum, param: GLint) callconv(APIENTRY) void,
glPixelTransferf: *const fn (pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glPixelTransferi: *const fn (pname: GLenum, param: GLint) callconv(APIENTRY) void,
glPixelMapfv: *const fn (map: GLenum, mapsize: GLsizei, values: [*c]const GLfloat) callconv(APIENTRY) void,
glPixelMapuiv: *const fn (map: GLenum, mapsize: GLsizei, values: [*c]const GLuint) callconv(APIENTRY) void,
glPixelMapusv: *const fn (map: GLenum, mapsize: GLsizei, values: [*c]const GLushort) callconv(APIENTRY) void,
glGetPixelMapfv: *const fn (map: GLenum, values: [*c]GLfloat) callconv(APIENTRY) void,
glGetPixelMapuiv: *const fn (map: GLenum, values: [*c]GLuint) callconv(APIENTRY) void,
glGetPixelMapusv: *const fn (map: GLenum, values: [*c]GLushort) callconv(APIENTRY) void,
glBitmap: *const fn (width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: [*c]const GLubyte) callconv(APIENTRY) void,
glReadPixels: *const fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*GLvoid) callconv(APIENTRY) void,
glDrawPixels: *const fn (width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glCopyPixels: *const fn (x: GLint, y: GLint, width: GLsizei, height: GLsizei, @"type": GLenum) callconv(APIENTRY) void,
glStencilFunc: *const fn (func: GLenum, ref: GLint, mask: GLuint) callconv(APIENTRY) void,
glStencilMask: *const fn (mask: GLuint) callconv(APIENTRY) void,
glStencilOp: *const fn (fail: GLenum, zfail: GLenum, zpass: GLenum) callconv(APIENTRY) void,
glClearStencil: *const fn (s: GLint) callconv(APIENTRY) void,
glTexGend: *const fn (coord: GLenum, pname: GLenum, param: GLdouble) callconv(APIENTRY) void,
glTexGenf: *const fn (coord: GLenum, pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glTexGeni: *const fn (coord: GLenum, pname: GLenum, param: GLint) callconv(APIENTRY) void,
glTexGendv: *const fn (coord: GLenum, pname: GLenum, params: [*c]const GLdouble) callconv(APIENTRY) void,
glTexGenfv: *const fn (coord: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glTexGeniv: *const fn (coord: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glGetTexGendv: *const fn (coord: GLenum, pname: GLenum, params: [*c]GLdouble) callconv(APIENTRY) void,
glGetTexGenfv: *const fn (coord: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetTexGeniv: *const fn (coord: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glTexEnvf: *const fn (target: GLenum, pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glTexEnvi: *const fn (target: GLenum, pname: GLenum, param: GLint) callconv(APIENTRY) void,
glTexEnvfv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glTexEnviv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glGetTexEnvfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetTexEnviv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glTexParameterf: *const fn (target: GLenum, pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glTexParameteri: *const fn (target: GLenum, pname: GLenum, param: GLint) callconv(APIENTRY) void,
glTexParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glTexParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glGetTexParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetTexParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glGetTexLevelParameterfv: *const fn (target: GLenum, level: GLint, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetTexLevelParameteriv: *const fn (target: GLenum, level: GLint, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glTexImage1D: *const fn (target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glTexImage2D: *const fn (target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glGetTexImage: *const fn (target: GLenum, level: GLint, format: GLenum, @"type": GLenum, pixels: ?*GLvoid) callconv(APIENTRY) void,
glGenTextures: *const fn (n: GLsizei, textures: [*c]GLuint) callconv(APIENTRY) void,
glDeleteTextures: *const fn (n: GLsizei, textures: [*c]const GLuint) callconv(APIENTRY) void,
glBindTexture: *const fn (target: GLenum, texture: GLuint) callconv(APIENTRY) void,
glPrioritizeTextures: *const fn (n: GLsizei, textures: [*c]const GLuint, priorities: [*c]const GLclampf) callconv(APIENTRY) void,
glAreTexturesResident: *const fn (n: GLsizei, textures: [*c]const GLuint, residences: [*c]GLboolean) callconv(APIENTRY) GLboolean,
glIsTexture: *const fn (texture: GLuint) callconv(APIENTRY) GLboolean,
glTexSubImage1D: *const fn (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glTexSubImage2D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glCopyTexImage1D: *const fn (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) callconv(APIENTRY) void,
glCopyTexImage2D: *const fn (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) callconv(APIENTRY) void,
glCopyTexSubImage1D: *const fn (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) callconv(APIENTRY) void,
glCopyTexSubImage2D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) callconv(APIENTRY) void,
glMap1d: *const fn (target: GLenum, @"u1": GLdouble, @"u2": GLdouble, stride: GLint, order: GLint, points: [*c]const GLdouble) callconv(APIENTRY) void,
glMap1f: *const fn (target: GLenum, @"u1": GLfloat, @"u2": GLfloat, stride: GLint, order: GLint, points: [*c]const GLfloat) callconv(APIENTRY) void,
glMap2d: *const fn (target: GLenum, @"u1": GLdouble, @"u2": GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: [*c]const GLdouble) callconv(APIENTRY) void,
glMap2f: *const fn (target: GLenum, @"u1": GLfloat, @"u2": GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: [*c]const GLfloat) callconv(APIENTRY) void,
glGetMapdv: *const fn (target: GLenum, query: GLenum, v: [*c]GLdouble) callconv(APIENTRY) void,
glGetMapfv: *const fn (target: GLenum, query: GLenum, v: [*c]GLfloat) callconv(APIENTRY) void,
glGetMapiv: *const fn (target: GLenum, query: GLenum, v: [*c]GLint) callconv(APIENTRY) void,
glEvalCoord1d: *const fn (u: GLdouble) callconv(APIENTRY) void,
glEvalCoord1f: *const fn (u: GLfloat) callconv(APIENTRY) void,
glEvalCoord1dv: *const fn (u: [*c]const GLdouble) callconv(APIENTRY) void,
glEvalCoord1fv: *const fn (u: [*c]const GLfloat) callconv(APIENTRY) void,
glEvalCoord2d: *const fn (u: GLdouble, v: GLdouble) callconv(APIENTRY) void,
glEvalCoord2f: *const fn (u: GLfloat, v: GLfloat) callconv(APIENTRY) void,
glEvalCoord2dv: *const fn (u: [*c]const GLdouble) callconv(APIENTRY) void,
glEvalCoord2fv: *const fn (u: [*c]const GLfloat) callconv(APIENTRY) void,
glMapGrid1d: *const fn (un: GLint, @"u1": GLdouble, @"u2": GLdouble) callconv(APIENTRY) void,
glMapGrid1f: *const fn (un: GLint, @"u1": GLfloat, @"u2": GLfloat) callconv(APIENTRY) void,
glMapGrid2d: *const fn (un: GLint, @"u1": GLdouble, @"u2": GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) callconv(APIENTRY) void,
glMapGrid2f: *const fn (un: GLint, @"u1": GLfloat, @"u2": GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) callconv(APIENTRY) void,
glEvalPoint1: *const fn (i: GLint) callconv(APIENTRY) void,
glEvalPoint2: *const fn (i: GLint, j: GLint) callconv(APIENTRY) void,
glEvalMesh1: *const fn (mode: GLenum, @"i1": GLint, @"i2": GLint) callconv(APIENTRY) void,
glEvalMesh2: *const fn (mode: GLenum, @"i1": GLint, @"i2": GLint, j1: GLint, j2: GLint) callconv(APIENTRY) void,
glFogf: *const fn (pname: GLenum, param: GLfloat) callconv(APIENTRY) void,
glFogi: *const fn (pname: GLenum, param: GLint) callconv(APIENTRY) void,
glFogfv: *const fn (pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glFogiv: *const fn (pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glFeedbackBuffer: *const fn (size: GLsizei, @"type": GLenum, buffer: [*c]GLfloat) callconv(APIENTRY) void,
glPassThrough: *const fn (token: GLfloat) callconv(APIENTRY) void,
glSelectBuffer: *const fn (size: GLsizei, buffer: [*c]GLuint) callconv(APIENTRY) void,
glInitNames: *const fn () callconv(APIENTRY) void,
glLoadName: *const fn (name: GLuint) callconv(APIENTRY) void,
glPushName: *const fn (name: GLuint) callconv(APIENTRY) void,
glPopName: *const fn () callconv(APIENTRY) void,
glDrawRangeElements: *const fn (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, @"type": GLenum, indices: ?*const GLvoid) callconv(APIENTRY) void,
glTexImage3D: *const fn (target: GLenum, level: GLint, internalFormat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glTexSubImage3D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, @"type": GLenum, pixels: ?*const GLvoid) callconv(APIENTRY) void,
glCopyTexSubImage3D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) callconv(APIENTRY) void,
glColorTable: *const fn (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, @"type": GLenum, table: ?*const GLvoid) callconv(APIENTRY) void,
glColorSubTable: *const fn (target: GLenum, start: GLsizei, count: GLsizei, format: GLenum, @"type": GLenum, data: ?*const GLvoid) callconv(APIENTRY) void,
glColorTableParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glColorTableParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glCopyColorSubTable: *const fn (target: GLenum, start: GLsizei, x: GLint, y: GLint, width: GLsizei) callconv(APIENTRY) void,
glCopyColorTable: *const fn (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) callconv(APIENTRY) void,
glGetColorTable: *const fn (target: GLenum, format: GLenum, @"type": GLenum, table: ?*GLvoid) callconv(APIENTRY) void,
glGetColorTableParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetColorTableParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glBlendEquation: *const fn (mode: GLenum) callconv(APIENTRY) void,
glBlendColor: *const fn (red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf) callconv(APIENTRY) void,
glHistogram: *const fn (target: GLenum, width: GLsizei, internalformat: GLenum, sink: GLboolean) callconv(APIENTRY) void,
glResetHistogram: *const fn (target: GLenum) callconv(APIENTRY) void,
glGetHistogram: *const fn (target: GLenum, reset: GLboolean, format: GLenum, @"type": GLenum, values: ?*GLvoid) callconv(APIENTRY) void,
glGetHistogramParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetHistogramParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glMinmax: *const fn (target: GLenum, internalformat: GLenum, sink: GLboolean) callconv(APIENTRY) void,
glResetMinmax: *const fn (target: GLenum) callconv(APIENTRY) void,
glGetMinmax: *const fn (target: GLenum, reset: GLboolean, format: GLenum, types: GLenum, values: ?*GLvoid) callconv(APIENTRY) void,
glGetMinmaxParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetMinmaxParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glConvolutionFilter1D: *const fn (target: GLenum, internalformat: GLenum, width: GLsizei, format: GLenum, @"type": GLenum, image: ?*const GLvoid) callconv(APIENTRY) void,
glConvolutionFilter2D: *const fn (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, image: ?*const GLvoid) callconv(APIENTRY) void,
glConvolutionParameterf: *const fn (target: GLenum, pname: GLenum, params: GLfloat) callconv(APIENTRY) void,
glConvolutionParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLfloat) callconv(APIENTRY) void,
glConvolutionParameteri: *const fn (target: GLenum, pname: GLenum, params: GLint) callconv(APIENTRY) void,
glConvolutionParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]const GLint) callconv(APIENTRY) void,
glCopyConvolutionFilter1D: *const fn (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei) callconv(APIENTRY) void,
glCopyConvolutionFilter2D: *const fn (target: GLenum, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) callconv(APIENTRY) void,
glGetConvolutionFilter: *const fn (target: GLenum, format: GLenum, @"type": GLenum, image: ?*GLvoid) callconv(APIENTRY) void,
glGetConvolutionParameterfv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLfloat) callconv(APIENTRY) void,
glGetConvolutionParameteriv: *const fn (target: GLenum, pname: GLenum, params: [*c]GLint) callconv(APIENTRY) void,
glSeparableFilter2D: *const fn (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, format: GLenum, @"type": GLenum, row: ?*const GLvoid, column: ?*const GLvoid) callconv(APIENTRY) void,
glGetSeparableFilter: *const fn (target: GLenum, format: GLenum, @"type": GLenum, row: ?*GLvoid, column: ?*GLvoid, span: ?*GLvoid) callconv(APIENTRY) void,
glActiveTexture: *const fn (texture: GLenum) callconv(APIENTRY) void,
glClientActiveTexture: *const fn (texture: GLenum) callconv(APIENTRY) void,
glCompressedTexImage1D: *const fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glCompressedTexImage2D: *const fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glCompressedTexImage3D: *const fn (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glCompressedTexSubImage1D: *const fn (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glCompressedTexSubImage2D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glCompressedTexSubImage3D: *const fn (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: ?*const GLvoid) callconv(APIENTRY) void,
glGetCompressedTexImage: *const fn (target: GLenum, lod: GLint, img: ?*GLvoid) callconv(APIENTRY) void,
glMultiTexCoord1d: *const fn (target: GLenum, s: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord1dv: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord1f: *const fn (target: GLenum, s: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord1fv: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord1i: *const fn (target: GLenum, s: GLint) callconv(APIENTRY) void,
glMultiTexCoord1iv: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord1s: *const fn (target: GLenum, s: GLshort) callconv(APIENTRY) void,
glMultiTexCoord1sv: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord2d: *const fn (target: GLenum, s: GLdouble, t: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord2dv: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord2f: *const fn (target: GLenum, s: GLfloat, t: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord2fv: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord2i: *const fn (target: GLenum, s: GLint, t: GLint) callconv(APIENTRY) void,
glMultiTexCoord2iv: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord2s: *const fn (target: GLenum, s: GLshort, t: GLshort) callconv(APIENTRY) void,
glMultiTexCoord2sv: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord3d: *const fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord3dv: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord3f: *const fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord3fv: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord3i: *const fn (target: GLenum, s: GLint, t: GLint, r: GLint) callconv(APIENTRY) void,
glMultiTexCoord3iv: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord3s: *const fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort) callconv(APIENTRY) void,
glMultiTexCoord3sv: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord4d: *const fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord4dv: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord4f: *const fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord4fv: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord4i: *const fn (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) callconv(APIENTRY) void,
glMultiTexCoord4iv: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord4s: *const fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) callconv(APIENTRY) void,
glMultiTexCoord4sv: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glLoadTransposeMatrixd: *const fn (m: [*c]const GLdouble) callconv(APIENTRY) void,
glLoadTransposeMatrixf: *const fn (m: [*c]const GLfloat) callconv(APIENTRY) void,
glMultTransposeMatrixd: *const fn (m: [*c]const GLdouble) callconv(APIENTRY) void,
glMultTransposeMatrixf: *const fn (m: [*c]const GLfloat) callconv(APIENTRY) void,
glSampleCoverage: *const fn (value: GLclampf, invert: GLboolean) callconv(APIENTRY) void,
glActiveTextureARB: *const fn (texture: GLenum) callconv(APIENTRY) void,
glClientActiveTextureARB: *const fn (texture: GLenum) callconv(APIENTRY) void,
glMultiTexCoord1dARB: *const fn (target: GLenum, s: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord1dvARB: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord1fARB: *const fn (target: GLenum, s: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord1fvARB: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord1iARB: *const fn (target: GLenum, s: GLint) callconv(APIENTRY) void,
glMultiTexCoord1ivARB: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord1sARB: *const fn (target: GLenum, s: GLshort) callconv(APIENTRY) void,
glMultiTexCoord1svARB: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord2dARB: *const fn (target: GLenum, s: GLdouble, t: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord2dvARB: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord2fARB: *const fn (target: GLenum, s: GLfloat, t: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord2fvARB: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord2iARB: *const fn (target: GLenum, s: GLint, t: GLint) callconv(APIENTRY) void,
glMultiTexCoord2ivARB: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord2sARB: *const fn (target: GLenum, s: GLshort, t: GLshort) callconv(APIENTRY) void,
glMultiTexCoord2svARB: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord3dARB: *const fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord3dvARB: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord3fARB: *const fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord3fvARB: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord3iARB: *const fn (target: GLenum, s: GLint, t: GLint, r: GLint) callconv(APIENTRY) void,
glMultiTexCoord3ivARB: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord3sARB: *const fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort) callconv(APIENTRY) void,
glMultiTexCoord3svARB: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glMultiTexCoord4dARB: *const fn (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) callconv(APIENTRY) void,
glMultiTexCoord4dvARB: *const fn (target: GLenum, v: [*c]const GLdouble) callconv(APIENTRY) void,
glMultiTexCoord4fARB: *const fn (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) callconv(APIENTRY) void,
glMultiTexCoord4fvARB: *const fn (target: GLenum, v: [*c]const GLfloat) callconv(APIENTRY) void,
glMultiTexCoord4iARB: *const fn (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) callconv(APIENTRY) void,
glMultiTexCoord4ivARB: *const fn (target: GLenum, v: [*c]const GLint) callconv(APIENTRY) void,
glMultiTexCoord4sARB: *const fn (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) callconv(APIENTRY) void,
glMultiTexCoord4svARB: *const fn (target: GLenum, v: [*c]const GLshort) callconv(APIENTRY) void,
glBlendEquationSeparateATI: *const fn (modeRGB: GLenum, modeA: GLenum) callconv(APIENTRY) void,

pub fn init(loader: anytype) !@This() {
    var procs: @This() = undefined;
    inline for (@typeInfo(@TypeOf(procs)).@"struct".fields) |proc| {
        @field(procs, proc.name) = @ptrCast(loader(proc.name) orelse return error.ProcNotFound);
    }
    return procs;
}
