pub const APIENTRY: @import("std").builtin.CallingConvention = if (@import("builtin").os.tag == .windows) .winapi else .c;

pub const Sync = *opaque {};
pub const Enum = c_ushort;
pub const Bitfield = c_uint;
pub const Boolean = u8;

pub const GLDEBUGPROC = ?*const fn (Enum, Enum, c_uint, Enum, c_int, [*c]const u8, ?*const anyopaque) callconv(.c) void;
pub const GLDEBUGPROCARB = ?*const fn (Enum, Enum, c_uint, Enum, c_int, [*c]const u8, ?*const anyopaque) callconv(.c) void;
pub const struct__cl_context = opaque {};
pub const struct__cl_event = opaque {};
pub const GLeglImageOES = ?*anyopaque;
pub const GLVULKANPROCNV = ?*const fn () callconv(.c) void;

glCullFace: *const fn (mode: Enum) callconv(APIENTRY) void,
glFrontFace: *const fn (mode: Enum) callconv(APIENTRY) void,
glHint: *const fn (target: Enum, mode: Enum) callconv(APIENTRY) void,
glLineWidth: *const fn (width: f32) callconv(APIENTRY) void,
glPointSize: *const fn (size: f32) callconv(APIENTRY) void,
glPolygonMode: *const fn (face: Enum, mode: Enum) callconv(APIENTRY) void,
glScissor: *const fn (x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glTexParameterf: *const fn (target: Enum, pname: Enum, param: f32) callconv(APIENTRY) void,
glTexParameterfv: *const fn (target: Enum, pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glTexParameteri: *const fn (target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glTexParameteriv: *const fn (target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glTexImage1D: *const fn (target: Enum, level: c_int, internalformat: c_int, width: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTexImage2D: *const fn (target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glDrawBuffer: *const fn (buf: Enum) callconv(APIENTRY) void,
glClear: *const fn (mask: Bitfield) callconv(APIENTRY) void,
glClearColor: *const fn (red: f32, green: f32, blue: f32, alpha: f32) callconv(APIENTRY) void,
glClearStencil: *const fn (s: c_int) callconv(APIENTRY) void,
glClearDepth: *const fn (depth: f64) callconv(APIENTRY) void,
glStencilMask: *const fn (mask: c_uint) callconv(APIENTRY) void,
glColorMask: *const fn (red: Boolean, green: Boolean, blue: Boolean, alpha: Boolean) callconv(APIENTRY) void,
glDepthMask: *const fn (flag: Boolean) callconv(APIENTRY) void,
glDisable: *const fn (cap: Enum) callconv(APIENTRY) void,
glEnable: *const fn (cap: Enum) callconv(APIENTRY) void,
glFinish: *const fn () callconv(APIENTRY) void,
glFlush: *const fn () callconv(APIENTRY) void,
glBlendFunc: *const fn (sfactor: Enum, dfactor: Enum) callconv(APIENTRY) void,
glLogicOp: *const fn (opcode: Enum) callconv(APIENTRY) void,
glStencilFunc: *const fn (func: Enum, ref: c_int, mask: c_uint) callconv(APIENTRY) void,
glStencilOp: *const fn (fail: Enum, zfail: Enum, zpass: Enum) callconv(APIENTRY) void,
glDepthFunc: *const fn (func: Enum) callconv(APIENTRY) void,
glPixelStoref: *const fn (pname: Enum, param: f32) callconv(APIENTRY) void,
glPixelStorei: *const fn (pname: Enum, param: c_int) callconv(APIENTRY) void,
glReadBuffer: *const fn (src: Enum) callconv(APIENTRY) void,
glReadPixels: *const fn (x: c_int, y: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetBooleanv: *const fn (pname: Enum, data: [*c]Boolean) callconv(APIENTRY) void,
glGetDoublev: *const fn (pname: Enum, data: [*c]f64) callconv(APIENTRY) void,
glGetError: *const fn () callconv(APIENTRY) Enum,
glGetFloatv: *const fn (pname: Enum, data: [*c]f32) callconv(APIENTRY) void,
glGetIntegerv: *const fn (pname: Enum, data: [*c]c_int) callconv(APIENTRY) void,
glGetString: *const fn (name: Enum) callconv(APIENTRY) [*c]const u8,
glGetTexImage: *const fn (target: Enum, level: c_int, format: Enum, @"type": Enum, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetTexParameterfv: *const fn (target: Enum, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTexParameteriv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTexLevelParameterfv: *const fn (target: Enum, level: c_int, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTexLevelParameteriv: *const fn (target: Enum, level: c_int, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glIsEnabled: *const fn (cap: Enum) callconv(APIENTRY) Boolean,
glDepthRange: *const fn (n: f64, f: f64) callconv(APIENTRY) void,
glViewport: *const fn (x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glDrawArrays: *const fn (mode: Enum, first: c_int, count: c_int) callconv(APIENTRY) void,
glDrawElements: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque) callconv(APIENTRY) void,
glGetPointerv: *const fn (pname: Enum, params: [*c]?*anyopaque) callconv(APIENTRY) void,
glPolygonOffset: *const fn (factor: f32, units: f32) callconv(APIENTRY) void,
glCopyTexImage1D: *const fn (target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, border: c_int) callconv(APIENTRY) void,
glCopyTexImage2D: *const fn (target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, height: c_int, border: c_int) callconv(APIENTRY) void,
glCopyTexSubImage1D: *const fn (target: Enum, level: c_int, xoffset: c_int, x: c_int, y: c_int, width: c_int) callconv(APIENTRY) void,
glCopyTexSubImage2D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glTexSubImage1D: *const fn (target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTexSubImage2D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glBindTexture: *const fn (target: Enum, texture: c_uint) callconv(APIENTRY) void,
glDeleteTextures: *const fn (n: c_int, textures: [*c]const c_uint) callconv(APIENTRY) void,
glGenTextures: *const fn (n: c_int, textures: [*c]c_uint) callconv(APIENTRY) void,
glIsTexture: *const fn (texture: c_uint) callconv(APIENTRY) Boolean,
glDrawRangeElements: *const fn (mode: Enum, start: c_uint, end: c_uint, count: c_int, @"type": Enum, indices: ?*const anyopaque) callconv(APIENTRY) void,
glTexImage3D: *const fn (target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, depth: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTexSubImage3D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCopyTexSubImage3D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glActiveTexture: *const fn (texture: Enum) callconv(APIENTRY) void,
glSampleCoverage: *const fn (value: f32, invert: Boolean) callconv(APIENTRY) void,
glCompressedTexImage3D: *const fn (target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, border: c_int, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTexImage2D: *const fn (target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, border: c_int, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTexImage1D: *const fn (target: Enum, level: c_int, internalformat: Enum, width: c_int, border: c_int, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTexSubImage3D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTexSubImage2D: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTexSubImage1D: *const fn (target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glGetCompressedTexImage: *const fn (target: Enum, level: c_int, img: ?*anyopaque) callconv(APIENTRY) void,
glBlendFuncSeparate: *const fn (sfactorRGB: Enum, dfactorRGB: Enum, sfactorAlpha: Enum, dfactorAlpha: Enum) callconv(APIENTRY) void,
glMultiDrawArrays: *const fn (mode: Enum, first: [*c]const c_int, count: [*c]const c_int, drawcount: c_int) callconv(APIENTRY) void,
glMultiDrawElements: *const fn (mode: Enum, count: [*c]const c_int, @"type": Enum, indices: [*c]const ?*const anyopaque, drawcount: c_int) callconv(APIENTRY) void,
glPointParameterf: *const fn (pname: Enum, param: f32) callconv(APIENTRY) void,
glPointParameterfv: *const fn (pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glPointParameteri: *const fn (pname: Enum, param: c_int) callconv(APIENTRY) void,
glPointParameteriv: *const fn (pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glBlendColor: *const fn (red: f32, green: f32, blue: f32, alpha: f32) callconv(APIENTRY) void,
glBlendEquation: *const fn (mode: Enum) callconv(APIENTRY) void,
glGenQueries: *const fn (n: c_int, ids: [*c]c_uint) callconv(APIENTRY) void,
glDeleteQueries: *const fn (n: c_int, ids: [*c]const c_uint) callconv(APIENTRY) void,
glIsQuery: *const fn (id: c_uint) callconv(APIENTRY) Boolean,
glBeginQuery: *const fn (target: Enum, id: c_uint) callconv(APIENTRY) void,
glEndQuery: *const fn (target: Enum) callconv(APIENTRY) void,
glGetQueryiv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetQueryObjectiv: *const fn (id: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetQueryObjectuiv: *const fn (id: c_uint, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glBindBuffer: *const fn (target: Enum, buffer: c_uint) callconv(APIENTRY) void,
glDeleteBuffers: *const fn (n: c_int, buffers: [*c]const c_uint) callconv(APIENTRY) void,
glGenBuffers: *const fn (n: c_int, buffers: [*c]c_uint) callconv(APIENTRY) void,
glIsBuffer: *const fn (buffer: c_uint) callconv(APIENTRY) Boolean,
glBufferData: *const fn (target: Enum, size: c_ulong, data: ?*const anyopaque, usage: Enum) callconv(APIENTRY) void,
glBufferSubData: *const fn (target: Enum, offset: c_long, size: c_ulong, data: ?*const anyopaque) callconv(APIENTRY) void,
glGetBufferSubData: *const fn (target: Enum, offset: c_long, size: c_ulong, data: ?*anyopaque) callconv(APIENTRY) void,
glMapBuffer: *const fn (target: Enum, access: Enum) callconv(APIENTRY) ?*anyopaque,
glUnmapBuffer: *const fn (target: Enum) callconv(APIENTRY) Boolean,
glGetBufferParameteriv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetBufferPointerv: *const fn (target: Enum, pname: Enum, params: [*c]?*anyopaque) callconv(APIENTRY) void,
glBlendEquationSeparate: *const fn (modeRGB: Enum, modeAlpha: Enum) callconv(APIENTRY) void,
glDrawBuffers: *const fn (n: c_int, bufs: [*c]const Enum) callconv(APIENTRY) void,
glStencilOpSeparate: *const fn (face: Enum, sfail: Enum, dpfail: Enum, dppass: Enum) callconv(APIENTRY) void,
glStencilFuncSeparate: *const fn (face: Enum, func: Enum, ref: c_int, mask: c_uint) callconv(APIENTRY) void,
glStencilMaskSeparate: *const fn (face: Enum, mask: c_uint) callconv(APIENTRY) void,
glAttachShader: *const fn (program: c_uint, shader: c_uint) callconv(APIENTRY) void,
glBindAttribLocation: *const fn (program: c_uint, index: c_uint, name: [*c]const u8) callconv(APIENTRY) void,
glCompileShader: *const fn (shader: c_uint) callconv(APIENTRY) void,
glCreateProgram: *const fn () callconv(APIENTRY) c_uint,
glCreateShader: *const fn (@"type": Enum) callconv(APIENTRY) c_uint,
glDeleteProgram: *const fn (program: c_uint) callconv(APIENTRY) void,
glDeleteShader: *const fn (shader: c_uint) callconv(APIENTRY) void,
glDetachShader: *const fn (program: c_uint, shader: c_uint) callconv(APIENTRY) void,
glDisableVertexAttribArray: *const fn (index: c_uint) callconv(APIENTRY) void,
glEnableVertexAttribArray: *const fn (index: c_uint) callconv(APIENTRY) void,
glGetActiveAttrib: *const fn (program: c_uint, index: c_uint, bufSize: c_int, length: [*c]c_int, size: [*c]c_int, @"type": [*c]Enum, name: [*c]u8) callconv(APIENTRY) void,
glGetActiveUniform: *const fn (program: c_uint, index: c_uint, bufSize: c_int, length: [*c]c_int, size: [*c]c_int, @"type": [*c]Enum, name: [*c]u8) callconv(APIENTRY) void,
glGetAttachedShaders: *const fn (program: c_uint, maxCount: c_int, count: [*c]c_int, shaders: [*c]c_uint) callconv(APIENTRY) void,
glGetAttribLocation: *const fn (program: c_uint, name: [*c]const u8) callconv(APIENTRY) c_int,
glGetProgramiv: *const fn (program: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetProgramInfoLog: *const fn (program: c_uint, bufSize: c_int, length: [*c]c_int, infoLog: [*c]u8) callconv(APIENTRY) void,
glGetShaderiv: *const fn (shader: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetShaderInfoLog: *const fn (shader: c_uint, bufSize: c_int, length: [*c]c_int, infoLog: [*c]u8) callconv(APIENTRY) void,
glGetShaderSource: *const fn (shader: c_uint, bufSize: c_int, length: [*c]c_int, source: [*c]u8) callconv(APIENTRY) void,
glGetUniformLocation: *const fn (program: c_uint, name: [*c]const u8) callconv(APIENTRY) c_int,
glGetUniformfv: *const fn (program: c_uint, location: c_int, params: [*c]f32) callconv(APIENTRY) void,
glGetUniformiv: *const fn (program: c_uint, location: c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetVertexAttribdv: *const fn (index: c_uint, pname: Enum, params: [*c]f64) callconv(APIENTRY) void,
glGetVertexAttribfv: *const fn (index: c_uint, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetVertexAttribiv: *const fn (index: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetVertexAttribPointerv: *const fn (index: c_uint, pname: Enum, pointer: [*c]?*anyopaque) callconv(APIENTRY) void,
glIsProgram: *const fn (program: c_uint) callconv(APIENTRY) Boolean,
glIsShader: *const fn (shader: c_uint) callconv(APIENTRY) Boolean,
glLinkProgram: *const fn (program: c_uint) callconv(APIENTRY) void,
glShaderSource: *const fn (shader: c_uint, count: c_int, string: [*c]const [*c]const u8, length: [*c]const c_int) callconv(APIENTRY) void,
glUseProgram: *const fn (program: c_uint) callconv(APIENTRY) void,
glUniform1f: *const fn (location: c_int, v0: f32) callconv(APIENTRY) void,
glUniform2f: *const fn (location: c_int, v0: f32, v1: f32) callconv(APIENTRY) void,
glUniform3f: *const fn (location: c_int, v0: f32, v1: f32, v2: f32) callconv(APIENTRY) void,
glUniform4f: *const fn (location: c_int, v0: f32, v1: f32, v2: f32, v3: f32) callconv(APIENTRY) void,
glUniform1i: *const fn (location: c_int, v0: c_int) callconv(APIENTRY) void,
glUniform2i: *const fn (location: c_int, v0: c_int, v1: c_int) callconv(APIENTRY) void,
glUniform3i: *const fn (location: c_int, v0: c_int, v1: c_int, v2: c_int) callconv(APIENTRY) void,
glUniform4i: *const fn (location: c_int, v0: c_int, v1: c_int, v2: c_int, v3: c_int) callconv(APIENTRY) void,
glUniform1fv: *const fn (location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glUniform2fv: *const fn (location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glUniform3fv: *const fn (location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glUniform4fv: *const fn (location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glUniform1iv: *const fn (location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glUniform2iv: *const fn (location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glUniform3iv: *const fn (location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glUniform4iv: *const fn (location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glUniformMatrix2fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix3fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix4fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glValidateProgram: *const fn (program: c_uint) callconv(APIENTRY) void,
glVertexAttrib1d: *const fn (index: c_uint, x: f64) callconv(APIENTRY) void,
glVertexAttrib1dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttrib1f: *const fn (index: c_uint, x: f32) callconv(APIENTRY) void,
glVertexAttrib1fv: *const fn (index: c_uint, v: [*c]const f32) callconv(APIENTRY) void,
glVertexAttrib1s: *const fn (index: c_uint, x: c_short) callconv(APIENTRY) void,
glVertexAttrib1sv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttrib2d: *const fn (index: c_uint, x: f64, y: f64) callconv(APIENTRY) void,
glVertexAttrib2dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttrib2f: *const fn (index: c_uint, x: f32, y: f32) callconv(APIENTRY) void,
glVertexAttrib2fv: *const fn (index: c_uint, v: [*c]const f32) callconv(APIENTRY) void,
glVertexAttrib2s: *const fn (index: c_uint, x: c_short, y: c_short) callconv(APIENTRY) void,
glVertexAttrib2sv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttrib3d: *const fn (index: c_uint, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glVertexAttrib3dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttrib3f: *const fn (index: c_uint, x: f32, y: f32, z: f32) callconv(APIENTRY) void,
glVertexAttrib3fv: *const fn (index: c_uint, v: [*c]const f32) callconv(APIENTRY) void,
glVertexAttrib3s: *const fn (index: c_uint, x: c_short, y: c_short, z: c_short) callconv(APIENTRY) void,
glVertexAttrib3sv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttrib4Nbv: *const fn (index: c_uint, v: [*c]const i8) callconv(APIENTRY) void,
glVertexAttrib4Niv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttrib4Nsv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttrib4Nub: *const fn (index: c_uint, x: u8, y: u8, z: u8, w: u8) callconv(APIENTRY) void,
glVertexAttrib4Nubv: *const fn (index: c_uint, v: [*c]const u8) callconv(APIENTRY) void,
glVertexAttrib4Nuiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttrib4Nusv: *const fn (index: c_uint, v: [*c]const c_ushort) callconv(APIENTRY) void,
glVertexAttrib4bv: *const fn (index: c_uint, v: [*c]const i8) callconv(APIENTRY) void,
glVertexAttrib4d: *const fn (index: c_uint, x: f64, y: f64, z: f64, w: f64) callconv(APIENTRY) void,
glVertexAttrib4dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttrib4f: *const fn (index: c_uint, x: f32, y: f32, z: f32, w: f32) callconv(APIENTRY) void,
glVertexAttrib4fv: *const fn (index: c_uint, v: [*c]const f32) callconv(APIENTRY) void,
glVertexAttrib4iv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttrib4s: *const fn (index: c_uint, x: c_short, y: c_short, z: c_short, w: c_short) callconv(APIENTRY) void,
glVertexAttrib4sv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttrib4ubv: *const fn (index: c_uint, v: [*c]const u8) callconv(APIENTRY) void,
glVertexAttrib4uiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttrib4usv: *const fn (index: c_uint, v: [*c]const c_ushort) callconv(APIENTRY) void,
glVertexAttribPointer: *const fn (index: c_uint, size: c_int, @"type": Enum, normalized: Boolean, stride: c_int, pointer: ?*const anyopaque) callconv(APIENTRY) void,
glUniformMatrix2x3fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix3x2fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix2x4fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix4x2fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix3x4fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glUniformMatrix4x3fv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glColorMaski: *const fn (index: c_uint, r: Boolean, g: Boolean, b: Boolean, a: Boolean) callconv(APIENTRY) void,
glGetBooleani_v: *const fn (target: Enum, index: c_uint, data: [*c]Boolean) callconv(APIENTRY) void,
glGetIntegeri_v: *const fn (target: Enum, index: c_uint, data: [*c]c_int) callconv(APIENTRY) void,
glEnablei: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) void,
glDisablei: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) void,
glIsEnabledi: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) Boolean,
glBeginTransformFeedback: *const fn (primitiveMode: Enum) callconv(APIENTRY) void,
glEndTransformFeedback: *const fn () callconv(APIENTRY) void,
glBindBufferRange: *const fn (target: Enum, index: c_uint, buffer: c_uint, offset: c_long, size: c_ulong) callconv(APIENTRY) void,
glBindBufferBase: *const fn (target: Enum, index: c_uint, buffer: c_uint) callconv(APIENTRY) void,
glTransformFeedbackVaryings: *const fn (program: c_uint, count: c_int, varyings: [*c]const [*c]const u8, bufferMode: Enum) callconv(APIENTRY) void,
glGetTransformFeedbackVarying: *const fn (program: c_uint, index: c_uint, bufSize: c_int, length: [*c]c_int, size: [*c]c_int, @"type": [*c]Enum, name: [*c]u8) callconv(APIENTRY) void,
glClampColor: *const fn (target: Enum, clamp: Enum) callconv(APIENTRY) void,
glBeginConditionalRender: *const fn (id: c_uint, mode: Enum) callconv(APIENTRY) void,
glEndConditionalRender: *const fn () callconv(APIENTRY) void,
glVertexAttribIPointer: *const fn (index: c_uint, size: c_int, @"type": Enum, stride: c_int, pointer: ?*const anyopaque) callconv(APIENTRY) void,
glGetVertexAttribIiv: *const fn (index: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetVertexAttribIuiv: *const fn (index: c_uint, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glVertexAttribI1i: *const fn (index: c_uint, x: c_int) callconv(APIENTRY) void,
glVertexAttribI2i: *const fn (index: c_uint, x: c_int, y: c_int) callconv(APIENTRY) void,
glVertexAttribI3i: *const fn (index: c_uint, x: c_int, y: c_int, z: c_int) callconv(APIENTRY) void,
glVertexAttribI4i: *const fn (index: c_uint, x: c_int, y: c_int, z: c_int, w: c_int) callconv(APIENTRY) void,
glVertexAttribI1ui: *const fn (index: c_uint, x: c_uint) callconv(APIENTRY) void,
glVertexAttribI2ui: *const fn (index: c_uint, x: c_uint, y: c_uint) callconv(APIENTRY) void,
glVertexAttribI3ui: *const fn (index: c_uint, x: c_uint, y: c_uint, z: c_uint) callconv(APIENTRY) void,
glVertexAttribI4ui: *const fn (index: c_uint, x: c_uint, y: c_uint, z: c_uint, w: c_uint) callconv(APIENTRY) void,
glVertexAttribI1iv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttribI2iv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttribI3iv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttribI4iv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glVertexAttribI1uiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribI2uiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribI3uiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribI4uiv: *const fn (index: c_uint, v: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribI4bv: *const fn (index: c_uint, v: [*c]const i8) callconv(APIENTRY) void,
glVertexAttribI4sv: *const fn (index: c_uint, v: [*c]const c_short) callconv(APIENTRY) void,
glVertexAttribI4ubv: *const fn (index: c_uint, v: [*c]const u8) callconv(APIENTRY) void,
glVertexAttribI4usv: *const fn (index: c_uint, v: [*c]const c_ushort) callconv(APIENTRY) void,
glGetUniformuiv: *const fn (program: c_uint, location: c_int, params: [*c]c_uint) callconv(APIENTRY) void,
glBindFragDataLocation: *const fn (program: c_uint, color: c_uint, name: [*c]const u8) callconv(APIENTRY) void,
glGetFragDataLocation: *const fn (program: c_uint, name: [*c]const u8) callconv(APIENTRY) c_int,
glUniform1ui: *const fn (location: c_int, v0: c_uint) callconv(APIENTRY) void,
glUniform2ui: *const fn (location: c_int, v0: c_uint, v1: c_uint) callconv(APIENTRY) void,
glUniform3ui: *const fn (location: c_int, v0: c_uint, v1: c_uint, v2: c_uint) callconv(APIENTRY) void,
glUniform4ui: *const fn (location: c_int, v0: c_uint, v1: c_uint, v2: c_uint, v3: c_uint) callconv(APIENTRY) void,
glUniform1uiv: *const fn (location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glUniform2uiv: *const fn (location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glUniform3uiv: *const fn (location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glUniform4uiv: *const fn (location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glTexParameterIiv: *const fn (target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glTexParameterIuiv: *const fn (target: Enum, pname: Enum, params: [*c]const c_uint) callconv(APIENTRY) void,
glGetTexParameterIiv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTexParameterIuiv: *const fn (target: Enum, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glClearBufferiv: *const fn (buffer: Enum, drawbuffer: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glClearBufferuiv: *const fn (buffer: Enum, drawbuffer: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glClearBufferfv: *const fn (buffer: Enum, drawbuffer: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glClearBufferfi: *const fn (buffer: Enum, drawbuffer: c_int, depth: f32, stencil: c_int) callconv(APIENTRY) void,
glGetStringi: *const fn (name: Enum, index: c_uint) callconv(APIENTRY) [*c]const u8,
glIsRenderbuffer: *const fn (renderbuffer: c_uint) callconv(APIENTRY) Boolean,
glBindRenderbuffer: *const fn (target: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glDeleteRenderbuffers: *const fn (n: c_int, renderbuffers: [*c]const c_uint) callconv(APIENTRY) void,
glGenRenderbuffers: *const fn (n: c_int, renderbuffers: [*c]c_uint) callconv(APIENTRY) void,
glRenderbufferStorage: *const fn (target: Enum, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetRenderbufferParameteriv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glIsFramebuffer: *const fn (framebuffer: c_uint) callconv(APIENTRY) Boolean,
glBindFramebuffer: *const fn (target: Enum, framebuffer: c_uint) callconv(APIENTRY) void,
glDeleteFramebuffers: *const fn (n: c_int, framebuffers: [*c]const c_uint) callconv(APIENTRY) void,
glGenFramebuffers: *const fn (n: c_int, framebuffers: [*c]c_uint) callconv(APIENTRY) void,
glCheckFramebufferStatus: *const fn (target: Enum) callconv(APIENTRY) Enum,
glFramebufferTexture1D: *const fn (target: Enum, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glFramebufferTexture2D: *const fn (target: Enum, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glFramebufferTexture3D: *const fn (target: Enum, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int, zoffset: c_int) callconv(APIENTRY) void,
glFramebufferRenderbuffer: *const fn (target: Enum, attachment: Enum, renderbuffertarget: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glGetFramebufferAttachmentParameteriv: *const fn (target: Enum, attachment: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGenerateMipmap: *const fn (target: Enum) callconv(APIENTRY) void,
glBlitFramebuffer: *const fn (srcX0: c_int, srcY0: c_int, srcX1: c_int, srcY1: c_int, dstX0: c_int, dstY0: c_int, dstX1: c_int, dstY1: c_int, mask: Bitfield, filter: Enum) callconv(APIENTRY) void,
glRenderbufferStorageMultisample: *const fn (target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glFramebufferTextureLayer: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int, layer: c_int) callconv(APIENTRY) void,
glMapBufferRange: *const fn (target: Enum, offset: c_long, length: c_ulong, access: Bitfield) callconv(APIENTRY) ?*anyopaque,
glFlushMappedBufferRange: *const fn (target: Enum, offset: c_long, length: c_ulong) callconv(APIENTRY) void,
glBindVertexArray: *const fn (array: c_uint) callconv(APIENTRY) void,
glDeleteVertexArrays: *const fn (n: c_int, arrays: [*c]const c_uint) callconv(APIENTRY) void,
glGenVertexArrays: *const fn (n: c_int, arrays: [*c]c_uint) callconv(APIENTRY) void,
glIsVertexArray: *const fn (array: c_uint) callconv(APIENTRY) Boolean,
glDrawArraysInstanced: *const fn (mode: Enum, first: c_int, count: c_int, instancecount: c_int) callconv(APIENTRY) void,
glDrawElementsInstanced: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, instancecount: c_int) callconv(APIENTRY) void,
glTexBuffer: *const fn (target: Enum, internalformat: Enum, buffer: c_uint) callconv(APIENTRY) void,
glPrimitiveRestartIndex: *const fn (index: c_uint) callconv(APIENTRY) void,
glCopyBufferSubData: *const fn (readTarget: Enum, writeTarget: Enum, readOffset: c_long, writeOffset: c_long, size: c_ulong) callconv(APIENTRY) void,
glGetUniformIndices: *const fn (program: c_uint, uniformCount: c_int, uniformNames: [*c]const [*c]const u8, uniformIndices: [*c]c_uint) callconv(APIENTRY) void,
glGetActiveUniformsiv: *const fn (program: c_uint, uniformCount: c_int, uniformIndices: [*c]const c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetActiveUniformName: *const fn (program: c_uint, uniformIndex: c_uint, bufSize: c_int, length: [*c]c_int, uniformName: [*c]u8) callconv(APIENTRY) void,
glGetUniformBlockIndex: *const fn (program: c_uint, uniformBlockName: [*c]const u8) callconv(APIENTRY) c_uint,
glGetActiveUniformBlockiv: *const fn (program: c_uint, uniformBlockIndex: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetActiveUniformBlockName: *const fn (program: c_uint, uniformBlockIndex: c_uint, bufSize: c_int, length: [*c]c_int, uniformBlockName: [*c]u8) callconv(APIENTRY) void,
glUniformBlockBinding: *const fn (program: c_uint, uniformBlockIndex: c_uint, uniformBlockBinding: c_uint) callconv(APIENTRY) void,
glDrawElementsBaseVertex: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, basevertex: c_int) callconv(APIENTRY) void,
glDrawRangeElementsBaseVertex: *const fn (mode: Enum, start: c_uint, end: c_uint, count: c_int, @"type": Enum, indices: ?*const anyopaque, basevertex: c_int) callconv(APIENTRY) void,
glDrawElementsInstancedBaseVertex: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, instancecount: c_int, basevertex: c_int) callconv(APIENTRY) void,
glMultiDrawElementsBaseVertex: *const fn (mode: Enum, count: [*c]const c_int, @"type": Enum, indices: [*c]const ?*const anyopaque, drawcount: c_int, basevertex: [*c]const c_int) callconv(APIENTRY) void,
glProvokingVertex: *const fn (mode: Enum) callconv(APIENTRY) void,
glFenceSync: *const fn (condition: Enum, flags: Bitfield) callconv(APIENTRY) Sync,
glIsSync: *const fn (sync: Sync) callconv(APIENTRY) Boolean,
glDeleteSync: *const fn (sync: Sync) callconv(APIENTRY) void,
glClientWaitSync: *const fn (sync: Sync, flags: Bitfield, timeout: u64) callconv(APIENTRY) Enum,
glWaitSync: *const fn (sync: Sync, flags: Bitfield, timeout: u64) callconv(APIENTRY) void,
glGetInteger64v: *const fn (pname: Enum, data: [*c]i64) callconv(APIENTRY) void,
glGetSynciv: *const fn (sync: Sync, pname: Enum, count: c_int, length: [*c]c_int, values: [*c]c_int) callconv(APIENTRY) void,
glGetInteger64i_v: *const fn (target: Enum, index: c_uint, data: [*c]i64) callconv(APIENTRY) void,
glGetBufferParameteri64v: *const fn (target: Enum, pname: Enum, params: [*c]i64) callconv(APIENTRY) void,
glFramebufferTexture: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glTexImage2DMultisample: *const fn (target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTexImage3DMultisample: *const fn (target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glGetMultisamplefv: *const fn (pname: Enum, index: c_uint, val: [*c]f32) callconv(APIENTRY) void,
glSampleMaski: *const fn (maskNumber: c_uint, mask: Bitfield) callconv(APIENTRY) void,
glBindFragDataLocationIndexed: *const fn (program: c_uint, colorNumber: c_uint, index: c_uint, name: [*c]const u8) callconv(APIENTRY) void,
glGetFragDataIndex: *const fn (program: c_uint, name: [*c]const u8) callconv(APIENTRY) c_int,
glGenSamplers: *const fn (count: c_int, samplers: [*c]c_uint) callconv(APIENTRY) void,
glDeleteSamplers: *const fn (count: c_int, samplers: [*c]const c_uint) callconv(APIENTRY) void,
glIsSampler: *const fn (sampler: c_uint) callconv(APIENTRY) Boolean,
glBindSampler: *const fn (unit: c_uint, sampler: c_uint) callconv(APIENTRY) void,
glSamplerParameteri: *const fn (sampler: c_uint, pname: Enum, param: c_int) callconv(APIENTRY) void,
glSamplerParameteriv: *const fn (sampler: c_uint, pname: Enum, param: [*c]const c_int) callconv(APIENTRY) void,
glSamplerParameterf: *const fn (sampler: c_uint, pname: Enum, param: f32) callconv(APIENTRY) void,
glSamplerParameterfv: *const fn (sampler: c_uint, pname: Enum, param: [*c]const f32) callconv(APIENTRY) void,
glSamplerParameterIiv: *const fn (sampler: c_uint, pname: Enum, param: [*c]const c_int) callconv(APIENTRY) void,
glSamplerParameterIuiv: *const fn (sampler: c_uint, pname: Enum, param: [*c]const c_uint) callconv(APIENTRY) void,
glGetSamplerParameteriv: *const fn (sampler: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetSamplerParameterIiv: *const fn (sampler: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetSamplerParameterfv: *const fn (sampler: c_uint, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetSamplerParameterIuiv: *const fn (sampler: c_uint, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glQueryCounter: *const fn (id: c_uint, target: Enum) callconv(APIENTRY) void,
glGetQueryObjecti64v: *const fn (id: c_uint, pname: Enum, params: [*c]i64) callconv(APIENTRY) void,
glGetQueryObjectui64v: *const fn (id: c_uint, pname: Enum, params: [*c]u64) callconv(APIENTRY) void,
glVertexAttribDivisor: *const fn (index: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glVertexAttribP1ui: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: c_uint) callconv(APIENTRY) void,
glVertexAttribP1uiv: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribP2ui: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: c_uint) callconv(APIENTRY) void,
glVertexAttribP2uiv: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribP3ui: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: c_uint) callconv(APIENTRY) void,
glVertexAttribP3uiv: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: [*c]const c_uint) callconv(APIENTRY) void,
glVertexAttribP4ui: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: c_uint) callconv(APIENTRY) void,
glVertexAttribP4uiv: *const fn (index: c_uint, @"type": Enum, normalized: Boolean, value: [*c]const c_uint) callconv(APIENTRY) void,
glMinSampleShading: *const fn (value: f32) callconv(APIENTRY) void,
glBlendEquationi: *const fn (buf: c_uint, mode: Enum) callconv(APIENTRY) void,
glBlendEquationSeparatei: *const fn (buf: c_uint, modeRGB: Enum, modeAlpha: Enum) callconv(APIENTRY) void,
glBlendFunci: *const fn (buf: c_uint, src: Enum, dst: Enum) callconv(APIENTRY) void,
glBlendFuncSeparatei: *const fn (buf: c_uint, srcRGB: Enum, dstRGB: Enum, srcAlpha: Enum, dstAlpha: Enum) callconv(APIENTRY) void,
glDrawArraysIndirect: *const fn (mode: Enum, indirect: ?*const anyopaque) callconv(APIENTRY) void,
glDrawElementsIndirect: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque) callconv(APIENTRY) void,
glUniform1d: *const fn (location: c_int, x: f64) callconv(APIENTRY) void,
glUniform2d: *const fn (location: c_int, x: f64, y: f64) callconv(APIENTRY) void,
glUniform3d: *const fn (location: c_int, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glUniform4d: *const fn (location: c_int, x: f64, y: f64, z: f64, w: f64) callconv(APIENTRY) void,
glUniform1dv: *const fn (location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glUniform2dv: *const fn (location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glUniform3dv: *const fn (location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glUniform4dv: *const fn (location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix2dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix3dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix4dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix2x3dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix2x4dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix3x2dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix3x4dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix4x2dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glUniformMatrix4x3dv: *const fn (location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glGetUniformdv: *const fn (program: c_uint, location: c_int, params: [*c]f64) callconv(APIENTRY) void,
glGetSubroutineUniformLocation: *const fn (program: c_uint, shadertype: Enum, name: [*c]const u8) callconv(APIENTRY) c_int,
glGetSubroutineIndex: *const fn (program: c_uint, shadertype: Enum, name: [*c]const u8) callconv(APIENTRY) c_uint,
glGetActiveSubroutineUniformiv: *const fn (program: c_uint, shadertype: Enum, index: c_uint, pname: Enum, values: [*c]c_int) callconv(APIENTRY) void,
glGetActiveSubroutineUniformName: *const fn (program: c_uint, shadertype: Enum, index: c_uint, bufSize: c_int, length: [*c]c_int, name: [*c]u8) callconv(APIENTRY) void,
glGetActiveSubroutineName: *const fn (program: c_uint, shadertype: Enum, index: c_uint, bufSize: c_int, length: [*c]c_int, name: [*c]u8) callconv(APIENTRY) void,
glUniformSubroutinesuiv: *const fn (shadertype: Enum, count: c_int, indices: [*c]const c_uint) callconv(APIENTRY) void,
glGetUniformSubroutineuiv: *const fn (shadertype: Enum, location: c_int, params: [*c]c_uint) callconv(APIENTRY) void,
glGetProgramStageiv: *const fn (program: c_uint, shadertype: Enum, pname: Enum, values: [*c]c_int) callconv(APIENTRY) void,
glPatchParameteri: *const fn (pname: Enum, value: c_int) callconv(APIENTRY) void,
glPatchParameterfv: *const fn (pname: Enum, values: [*c]const f32) callconv(APIENTRY) void,
glBindTransformFeedback: *const fn (target: Enum, id: c_uint) callconv(APIENTRY) void,
glDeleteTransformFeedbacks: *const fn (n: c_int, ids: [*c]const c_uint) callconv(APIENTRY) void,
glGenTransformFeedbacks: *const fn (n: c_int, ids: [*c]c_uint) callconv(APIENTRY) void,
glIsTransformFeedback: *const fn (id: c_uint) callconv(APIENTRY) Boolean,
glPauseTransformFeedback: *const fn () callconv(APIENTRY) void,
glResumeTransformFeedback: *const fn () callconv(APIENTRY) void,
glDrawTransformFeedback: *const fn (mode: Enum, id: c_uint) callconv(APIENTRY) void,
glDrawTransformFeedbackStream: *const fn (mode: Enum, id: c_uint, stream: c_uint) callconv(APIENTRY) void,
glBeginQueryIndexed: *const fn (target: Enum, index: c_uint, id: c_uint) callconv(APIENTRY) void,
glEndQueryIndexed: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) void,
glGetQueryIndexediv: *const fn (target: Enum, index: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glReleaseShaderCompiler: *const fn () callconv(APIENTRY) void,
glShaderBinary: *const fn (count: c_int, shaders: [*c]const c_uint, binaryFormat: Enum, binary: ?*const anyopaque, length: c_int) callconv(APIENTRY) void,
glGetShaderPrecisionFormat: *const fn (shadertype: Enum, precisiontype: Enum, range: [*c]c_int, precision: [*c]c_int) callconv(APIENTRY) void,
glDepthRangef: *const fn (n: f32, f: f32) callconv(APIENTRY) void,
glClearDepthf: *const fn (d: f32) callconv(APIENTRY) void,
glGetProgramBinary: *const fn (program: c_uint, bufSize: c_int, length: [*c]c_int, binaryFormat: [*c]Enum, binary: ?*anyopaque) callconv(APIENTRY) void,
glProgramBinary: *const fn (program: c_uint, binaryFormat: Enum, binary: ?*const anyopaque, length: c_int) callconv(APIENTRY) void,
glProgramParameteri: *const fn (program: c_uint, pname: Enum, value: c_int) callconv(APIENTRY) void,
glUseProgramStages: *const fn (pipeline: c_uint, stages: Bitfield, program: c_uint) callconv(APIENTRY) void,
glActiveShaderProgram: *const fn (pipeline: c_uint, program: c_uint) callconv(APIENTRY) void,
glCreateShaderProgramv: *const fn (@"type": Enum, count: c_int, strings: [*c]const [*c]const u8) callconv(APIENTRY) c_uint,
glBindProgramPipeline: *const fn (pipeline: c_uint) callconv(APIENTRY) void,
glDeleteProgramPipelines: *const fn (n: c_int, pipelines: [*c]const c_uint) callconv(APIENTRY) void,
glGenProgramPipelines: *const fn (n: c_int, pipelines: [*c]c_uint) callconv(APIENTRY) void,
glIsProgramPipeline: *const fn (pipeline: c_uint) callconv(APIENTRY) Boolean,
glGetProgramPipelineiv: *const fn (pipeline: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glProgramUniform1i: *const fn (program: c_uint, location: c_int, v0: c_int) callconv(APIENTRY) void,
glProgramUniform1iv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform1f: *const fn (program: c_uint, location: c_int, v0: f32) callconv(APIENTRY) void,
glProgramUniform1fv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform1d: *const fn (program: c_uint, location: c_int, v0: f64) callconv(APIENTRY) void,
glProgramUniform1dv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform1ui: *const fn (program: c_uint, location: c_int, v0: c_uint) callconv(APIENTRY) void,
glProgramUniform1uiv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform2i: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int) callconv(APIENTRY) void,
glProgramUniform2iv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform2f: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32) callconv(APIENTRY) void,
glProgramUniform2fv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform2d: *const fn (program: c_uint, location: c_int, v0: f64, v1: f64) callconv(APIENTRY) void,
glProgramUniform2dv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform2ui: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint) callconv(APIENTRY) void,
glProgramUniform2uiv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform3i: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int, v2: c_int) callconv(APIENTRY) void,
glProgramUniform3iv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform3f: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32, v2: f32) callconv(APIENTRY) void,
glProgramUniform3fv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform3d: *const fn (program: c_uint, location: c_int, v0: f64, v1: f64, v2: f64) callconv(APIENTRY) void,
glProgramUniform3dv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform3ui: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint, v2: c_uint) callconv(APIENTRY) void,
glProgramUniform3uiv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform4i: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int, v2: c_int, v3: c_int) callconv(APIENTRY) void,
glProgramUniform4iv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform4f: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32, v2: f32, v3: f32) callconv(APIENTRY) void,
glProgramUniform4fv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform4d: *const fn (program: c_uint, location: c_int, v0: f64, v1: f64, v2: f64, v3: f64) callconv(APIENTRY) void,
glProgramUniform4dv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform4ui: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint, v2: c_uint, v3: c_uint) callconv(APIENTRY) void,
glProgramUniform4uiv: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniformMatrix2fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix2dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix2x3fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3x2fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix2x4fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4x2fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3x4fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4x3fv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix2x3dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3x2dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix2x4dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4x2dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3x4dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4x3dv: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glValidateProgramPipeline: *const fn (pipeline: c_uint) callconv(APIENTRY) void,
glGetProgramPipelineInfoLog: *const fn (pipeline: c_uint, bufSize: c_int, length: [*c]c_int, infoLog: [*c]u8) callconv(APIENTRY) void,
glVertexAttribL1d: *const fn (index: c_uint, x: f64) callconv(APIENTRY) void,
glVertexAttribL2d: *const fn (index: c_uint, x: f64, y: f64) callconv(APIENTRY) void,
glVertexAttribL3d: *const fn (index: c_uint, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glVertexAttribL4d: *const fn (index: c_uint, x: f64, y: f64, z: f64, w: f64) callconv(APIENTRY) void,
glVertexAttribL1dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttribL2dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttribL3dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttribL4dv: *const fn (index: c_uint, v: [*c]const f64) callconv(APIENTRY) void,
glVertexAttribLPointer: *const fn (index: c_uint, size: c_int, @"type": Enum, stride: c_int, pointer: ?*const anyopaque) callconv(APIENTRY) void,
glGetVertexAttribLdv: *const fn (index: c_uint, pname: Enum, params: [*c]f64) callconv(APIENTRY) void,
glViewportArrayv: *const fn (first: c_uint, count: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glViewportIndexedf: *const fn (index: c_uint, x: f32, y: f32, w: f32, h: f32) callconv(APIENTRY) void,
glViewportIndexedfv: *const fn (index: c_uint, v: [*c]const f32) callconv(APIENTRY) void,
glScissorArrayv: *const fn (first: c_uint, count: c_int, v: [*c]const c_int) callconv(APIENTRY) void,
glScissorIndexed: *const fn (index: c_uint, left: c_int, bottom: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glScissorIndexedv: *const fn (index: c_uint, v: [*c]const c_int) callconv(APIENTRY) void,
glDepthRangeArrayv: *const fn (first: c_uint, count: c_int, v: [*c]const f64) callconv(APIENTRY) void,
glDepthRangeIndexed: *const fn (index: c_uint, n: f64, f: f64) callconv(APIENTRY) void,
glGetFloati_v: *const fn (target: Enum, index: c_uint, data: [*c]f32) callconv(APIENTRY) void,
glGetDoublei_v: *const fn (target: Enum, index: c_uint, data: [*c]f64) callconv(APIENTRY) void,
glDrawArraysInstancedBaseInstance: *const fn (mode: Enum, first: c_int, count: c_int, instancecount: c_int, baseinstance: c_uint) callconv(APIENTRY) void,
glDrawElementsInstancedBaseInstance: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, instancecount: c_int, baseinstance: c_uint) callconv(APIENTRY) void,
glDrawElementsInstancedBaseVertexBaseInstance: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, instancecount: c_int, basevertex: c_int, baseinstance: c_uint) callconv(APIENTRY) void,
glGetInternalformativ: *const fn (target: Enum, internalformat: Enum, pname: Enum, count: c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetActiveAtomicCounterBufferiv: *const fn (program: c_uint, bufferIndex: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glBindImageTexture: *const fn (unit: c_uint, texture: c_uint, level: c_int, layered: Boolean, layer: c_int, access: Enum, format: Enum) callconv(APIENTRY) void,
glMemoryBarrier: *const fn (barriers: Bitfield) callconv(APIENTRY) void,
glTexStorage1D: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int) callconv(APIENTRY) void,
glTexStorage2D: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glTexStorage3D: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int) callconv(APIENTRY) void,
glDrawTransformFeedbackInstanced: *const fn (mode: Enum, id: c_uint, instancecount: c_int) callconv(APIENTRY) void,
glDrawTransformFeedbackStreamInstanced: *const fn (mode: Enum, id: c_uint, stream: c_uint, instancecount: c_int) callconv(APIENTRY) void,
glClearBufferData: *const fn (target: Enum, internalformat: Enum, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glClearBufferSubData: *const fn (target: Enum, internalformat: Enum, offset: c_long, size: c_ulong, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glDispatchCompute: *const fn (num_groups_x: c_uint, num_groups_y: c_uint, num_groups_z: c_uint) callconv(APIENTRY) void,
glDispatchComputeIndirect: *const fn (indirect: c_long) callconv(APIENTRY) void,
glCopyImageSubData: *const fn (srcName: c_uint, srcTarget: Enum, srcLevel: c_int, srcX: c_int, srcY: c_int, srcZ: c_int, dstName: c_uint, dstTarget: Enum, dstLevel: c_int, dstX: c_int, dstY: c_int, dstZ: c_int, srcWidth: c_int, srcHeight: c_int, srcDepth: c_int) callconv(APIENTRY) void,
glFramebufferParameteri: *const fn (target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glGetFramebufferParameteriv: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetInternalformati64v: *const fn (target: Enum, internalformat: Enum, pname: Enum, count: c_int, params: [*c]i64) callconv(APIENTRY) void,
glInvalidateTexSubImage: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int) callconv(APIENTRY) void,
glInvalidateTexImage: *const fn (texture: c_uint, level: c_int) callconv(APIENTRY) void,
glInvalidateBufferSubData: *const fn (buffer: c_uint, offset: c_long, length: c_ulong) callconv(APIENTRY) void,
glInvalidateBufferData: *const fn (buffer: c_uint) callconv(APIENTRY) void,
glInvalidateFramebuffer: *const fn (target: Enum, numAttachments: c_int, attachments: [*c]const Enum) callconv(APIENTRY) void,
glInvalidateSubFramebuffer: *const fn (target: Enum, numAttachments: c_int, attachments: [*c]const Enum, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glMultiDrawArraysIndirect: *const fn (mode: Enum, indirect: ?*const anyopaque, drawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glMultiDrawElementsIndirect: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque, drawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glGetProgramInterfaceiv: *const fn (program: c_uint, programInterface: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetProgramResourceIndex: *const fn (program: c_uint, programInterface: Enum, name: [*c]const u8) callconv(APIENTRY) c_uint,
glGetProgramResourceName: *const fn (program: c_uint, programInterface: Enum, index: c_uint, bufSize: c_int, length: [*c]c_int, name: [*c]u8) callconv(APIENTRY) void,
glGetProgramResourceiv: *const fn (program: c_uint, programInterface: Enum, index: c_uint, propCount: c_int, props: [*c]const Enum, count: c_int, length: [*c]c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetProgramResourceLocation: *const fn (program: c_uint, programInterface: Enum, name: [*c]const u8) callconv(APIENTRY) c_int,
glGetProgramResourceLocationIndex: *const fn (program: c_uint, programInterface: Enum, name: [*c]const u8) callconv(APIENTRY) c_int,
glShaderStorageBlockBinding: *const fn (program: c_uint, storageBlockIndex: c_uint, storageBlockBinding: c_uint) callconv(APIENTRY) void,
glTexBufferRange: *const fn (target: Enum, internalformat: Enum, buffer: c_uint, offset: c_long, size: c_ulong) callconv(APIENTRY) void,
glTexStorage2DMultisample: *const fn (target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTexStorage3DMultisample: *const fn (target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTextureView: *const fn (texture: c_uint, target: Enum, origtexture: c_uint, internalformat: Enum, minlevel: c_uint, numlevels: c_uint, minlayer: c_uint, numlayers: c_uint) callconv(APIENTRY) void,
glBindVertexBuffer: *const fn (bindingindex: c_uint, buffer: c_uint, offset: c_long, stride: c_int) callconv(APIENTRY) void,
glVertexAttribFormat: *const fn (attribindex: c_uint, size: c_int, @"type": Enum, normalized: Boolean, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexAttribIFormat: *const fn (attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexAttribLFormat: *const fn (attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexAttribBinding: *const fn (attribindex: c_uint, bindingindex: c_uint) callconv(APIENTRY) void,
glVertexBindingDivisor: *const fn (bindingindex: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glDebugMessageControl: *const fn (source: Enum, @"type": Enum, severity: Enum, count: c_int, ids: [*c]const c_uint, enabled: Boolean) callconv(APIENTRY) void,
glDebugMessageInsert: *const fn (source: Enum, @"type": Enum, id: c_uint, severity: Enum, length: c_int, buf: [*c]const u8) callconv(APIENTRY) void,
glDebugMessageCallback: *const fn (callback: GLDEBUGPROC, userParam: ?*const anyopaque) callconv(APIENTRY) void,
glGetDebugMessageLog: *const fn (count: c_uint, bufSize: c_int, sources: [*c]Enum, types: [*c]Enum, ids: [*c]c_uint, severities: [*c]Enum, lengths: [*c]c_int, messageLog: [*c]u8) callconv(APIENTRY) c_uint,
glPushDebugGroup: *const fn (source: Enum, id: c_uint, length: c_int, message: [*c]const u8) callconv(APIENTRY) void,
glPopDebugGroup: *const fn () callconv(APIENTRY) void,
glObjectLabel: *const fn (identifier: Enum, name: c_uint, length: c_int, label: [*c]const u8) callconv(APIENTRY) void,
glGetObjectLabel: *const fn (identifier: Enum, name: c_uint, bufSize: c_int, length: [*c]c_int, label: [*c]u8) callconv(APIENTRY) void,
glObjectPtrLabel: *const fn (ptr: ?*const anyopaque, length: c_int, label: [*c]const u8) callconv(APIENTRY) void,
glGetObjectPtrLabel: *const fn (ptr: ?*const anyopaque, bufSize: c_int, length: [*c]c_int, label: [*c]u8) callconv(APIENTRY) void,
glBufferStorage: *const fn (target: Enum, size: c_ulong, data: ?*const anyopaque, flags: Bitfield) callconv(APIENTRY) void,
glClearTexImage: *const fn (texture: c_uint, level: c_int, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glClearTexSubImage: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glBindBuffersBase: *const fn (target: Enum, first: c_uint, count: c_int, buffers: [*c]const c_uint) callconv(APIENTRY) void,
glBindBuffersRange: *const fn (target: Enum, first: c_uint, count: c_int, buffers: [*c]const c_uint, offsets: [*c]const c_long, sizes: [*c]const c_ulong) callconv(APIENTRY) void,
glBindTextures: *const fn (first: c_uint, count: c_int, textures: [*c]const c_uint) callconv(APIENTRY) void,
glBindSamplers: *const fn (first: c_uint, count: c_int, samplers: [*c]const c_uint) callconv(APIENTRY) void,
glBindImageTextures: *const fn (first: c_uint, count: c_int, textures: [*c]const c_uint) callconv(APIENTRY) void,
glBindVertexBuffers: *const fn (first: c_uint, count: c_int, buffers: [*c]const c_uint, offsets: [*c]const c_long, strides: [*c]const c_int) callconv(APIENTRY) void,
glClipControl: *const fn (origin: Enum, depth: Enum) callconv(APIENTRY) void,
glCreateTransformFeedbacks: *const fn (n: c_int, ids: [*c]c_uint) callconv(APIENTRY) void,
glTransformFeedbackBufferBase: *const fn (xfb: c_uint, index: c_uint, buffer: c_uint) callconv(APIENTRY) void,
glTransformFeedbackBufferRange: *const fn (xfb: c_uint, index: c_uint, buffer: c_uint, offset: c_long, size: c_ulong) callconv(APIENTRY) void,
glGetTransformFeedbackiv: *const fn (xfb: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetTransformFeedbacki_v: *const fn (xfb: c_uint, pname: Enum, index: c_uint, param: [*c]c_int) callconv(APIENTRY) void,
glGetTransformFeedbacki64_v: *const fn (xfb: c_uint, pname: Enum, index: c_uint, param: [*c]i64) callconv(APIENTRY) void,
glCreateBuffers: *const fn (n: c_int, buffers: [*c]c_uint) callconv(APIENTRY) void,
glNamedBufferStorage: *const fn (buffer: c_uint, size: c_ulong, data: ?*const anyopaque, flags: Bitfield) callconv(APIENTRY) void,
glNamedBufferData: *const fn (buffer: c_uint, size: c_ulong, data: ?*const anyopaque, usage: Enum) callconv(APIENTRY) void,
glNamedBufferSubData: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, data: ?*const anyopaque) callconv(APIENTRY) void,
glCopyNamedBufferSubData: *const fn (readBuffer: c_uint, writeBuffer: c_uint, readOffset: c_long, writeOffset: c_long, size: c_ulong) callconv(APIENTRY) void,
glClearNamedBufferData: *const fn (buffer: c_uint, internalformat: Enum, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glClearNamedBufferSubData: *const fn (buffer: c_uint, internalformat: Enum, offset: c_long, size: c_ulong, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glMapNamedBuffer: *const fn (buffer: c_uint, access: Enum) callconv(APIENTRY) ?*anyopaque,
glMapNamedBufferRange: *const fn (buffer: c_uint, offset: c_long, length: c_ulong, access: Bitfield) callconv(APIENTRY) ?*anyopaque,
glUnmapNamedBuffer: *const fn (buffer: c_uint) callconv(APIENTRY) Boolean,
glFlushMappedNamedBufferRange: *const fn (buffer: c_uint, offset: c_long, length: c_ulong) callconv(APIENTRY) void,
glGetNamedBufferParameteriv: *const fn (buffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetNamedBufferParameteri64v: *const fn (buffer: c_uint, pname: Enum, params: [*c]i64) callconv(APIENTRY) void,
glGetNamedBufferPointerv: *const fn (buffer: c_uint, pname: Enum, params: [*c]?*anyopaque) callconv(APIENTRY) void,
glGetNamedBufferSubData: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, data: ?*anyopaque) callconv(APIENTRY) void,
glCreateFramebuffers: *const fn (n: c_int, framebuffers: [*c]c_uint) callconv(APIENTRY) void,
glNamedFramebufferRenderbuffer: *const fn (framebuffer: c_uint, attachment: Enum, renderbuffertarget: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glNamedFramebufferParameteri: *const fn (framebuffer: c_uint, pname: Enum, param: c_int) callconv(APIENTRY) void,
glNamedFramebufferTexture: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glNamedFramebufferTextureLayer: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int, layer: c_int) callconv(APIENTRY) void,
glNamedFramebufferDrawBuffer: *const fn (framebuffer: c_uint, buf: Enum) callconv(APIENTRY) void,
glNamedFramebufferDrawBuffers: *const fn (framebuffer: c_uint, n: c_int, bufs: [*c]const Enum) callconv(APIENTRY) void,
glNamedFramebufferReadBuffer: *const fn (framebuffer: c_uint, src: Enum) callconv(APIENTRY) void,
glInvalidateNamedFramebufferData: *const fn (framebuffer: c_uint, numAttachments: c_int, attachments: [*c]const Enum) callconv(APIENTRY) void,
glInvalidateNamedFramebufferSubData: *const fn (framebuffer: c_uint, numAttachments: c_int, attachments: [*c]const Enum, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glClearNamedFramebufferiv: *const fn (framebuffer: c_uint, buffer: Enum, drawbuffer: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glClearNamedFramebufferuiv: *const fn (framebuffer: c_uint, buffer: Enum, drawbuffer: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glClearNamedFramebufferfv: *const fn (framebuffer: c_uint, buffer: Enum, drawbuffer: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glClearNamedFramebufferfi: *const fn (framebuffer: c_uint, buffer: Enum, drawbuffer: c_int, depth: f32, stencil: c_int) callconv(APIENTRY) void,
glBlitNamedFramebuffer: *const fn (readFramebuffer: c_uint, drawFramebuffer: c_uint, srcX0: c_int, srcY0: c_int, srcX1: c_int, srcY1: c_int, dstX0: c_int, dstY0: c_int, dstX1: c_int, dstY1: c_int, mask: Bitfield, filter: Enum) callconv(APIENTRY) void,
glCheckNamedFramebufferStatus: *const fn (framebuffer: c_uint, target: Enum) callconv(APIENTRY) Enum,
glGetNamedFramebufferParameteriv: *const fn (framebuffer: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetNamedFramebufferAttachmentParameteriv: *const fn (framebuffer: c_uint, attachment: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glCreateRenderbuffers: *const fn (n: c_int, renderbuffers: [*c]c_uint) callconv(APIENTRY) void,
glNamedRenderbufferStorage: *const fn (renderbuffer: c_uint, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glNamedRenderbufferStorageMultisample: *const fn (renderbuffer: c_uint, samples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetNamedRenderbufferParameteriv: *const fn (renderbuffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glCreateTextures: *const fn (target: Enum, n: c_int, textures: [*c]c_uint) callconv(APIENTRY) void,
glTextureBuffer: *const fn (texture: c_uint, internalformat: Enum, buffer: c_uint) callconv(APIENTRY) void,
glTextureBufferRange: *const fn (texture: c_uint, internalformat: Enum, buffer: c_uint, offset: c_long, size: c_ulong) callconv(APIENTRY) void,
glTextureStorage1D: *const fn (texture: c_uint, levels: c_int, internalformat: Enum, width: c_int) callconv(APIENTRY) void,
glTextureStorage2D: *const fn (texture: c_uint, levels: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glTextureStorage3D: *const fn (texture: c_uint, levels: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int) callconv(APIENTRY) void,
glTextureStorage2DMultisample: *const fn (texture: c_uint, samples: c_int, internalformat: Enum, width: c_int, height: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTextureStorage3DMultisample: *const fn (texture: c_uint, samples: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTextureSubImage1D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, width: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureSubImage2D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureSubImage3D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage1D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, width: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage2D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage3D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, imageSize: c_int, data: ?*const anyopaque) callconv(APIENTRY) void,
glCopyTextureSubImage1D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, x: c_int, y: c_int, width: c_int) callconv(APIENTRY) void,
glCopyTextureSubImage2D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glCopyTextureSubImage3D: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glTextureParameterf: *const fn (texture: c_uint, pname: Enum, param: f32) callconv(APIENTRY) void,
glTextureParameterfv: *const fn (texture: c_uint, pname: Enum, param: [*c]const f32) callconv(APIENTRY) void,
glTextureParameteri: *const fn (texture: c_uint, pname: Enum, param: c_int) callconv(APIENTRY) void,
glTextureParameterIiv: *const fn (texture: c_uint, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glTextureParameterIuiv: *const fn (texture: c_uint, pname: Enum, params: [*c]const c_uint) callconv(APIENTRY) void,
glTextureParameteriv: *const fn (texture: c_uint, pname: Enum, param: [*c]const c_int) callconv(APIENTRY) void,
glGenerateTextureMipmap: *const fn (texture: c_uint) callconv(APIENTRY) void,
glBindTextureUnit: *const fn (unit: c_uint, texture: c_uint) callconv(APIENTRY) void,
glGetTextureImage: *const fn (texture: c_uint, level: c_int, format: Enum, @"type": Enum, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetCompressedTextureImage: *const fn (texture: c_uint, level: c_int, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetTextureLevelParameterfv: *const fn (texture: c_uint, level: c_int, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTextureLevelParameteriv: *const fn (texture: c_uint, level: c_int, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTextureParameterfv: *const fn (texture: c_uint, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTextureParameterIiv: *const fn (texture: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTextureParameterIuiv: *const fn (texture: c_uint, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glGetTextureParameteriv: *const fn (texture: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glCreateVertexArrays: *const fn (n: c_int, arrays: [*c]c_uint) callconv(APIENTRY) void,
glDisableVertexArrayAttrib: *const fn (vaobj: c_uint, index: c_uint) callconv(APIENTRY) void,
glEnableVertexArrayAttrib: *const fn (vaobj: c_uint, index: c_uint) callconv(APIENTRY) void,
glVertexArrayElementBuffer: *const fn (vaobj: c_uint, buffer: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexBuffer: *const fn (vaobj: c_uint, bindingindex: c_uint, buffer: c_uint, offset: c_long, stride: c_int) callconv(APIENTRY) void,
glVertexArrayVertexBuffers: *const fn (vaobj: c_uint, first: c_uint, count: c_int, buffers: [*c]const c_uint, offsets: [*c]const c_long, strides: [*c]const c_int) callconv(APIENTRY) void,
glVertexArrayAttribBinding: *const fn (vaobj: c_uint, attribindex: c_uint, bindingindex: c_uint) callconv(APIENTRY) void,
glVertexArrayAttribFormat: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, normalized: Boolean, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayAttribIFormat: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayAttribLFormat: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayBindingDivisor: *const fn (vaobj: c_uint, bindingindex: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glGetVertexArrayiv: *const fn (vaobj: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetVertexArrayIndexediv: *const fn (vaobj: c_uint, index: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetVertexArrayIndexed64iv: *const fn (vaobj: c_uint, index: c_uint, pname: Enum, param: [*c]i64) callconv(APIENTRY) void,
glCreateSamplers: *const fn (n: c_int, samplers: [*c]c_uint) callconv(APIENTRY) void,
glCreateProgramPipelines: *const fn (n: c_int, pipelines: [*c]c_uint) callconv(APIENTRY) void,
glCreateQueries: *const fn (target: Enum, n: c_int, ids: [*c]c_uint) callconv(APIENTRY) void,
glGetQueryBufferObjecti64v: *const fn (id: c_uint, buffer: c_uint, pname: Enum, offset: c_long) callconv(APIENTRY) void,
glGetQueryBufferObjectiv: *const fn (id: c_uint, buffer: c_uint, pname: Enum, offset: c_long) callconv(APIENTRY) void,
glGetQueryBufferObjectui64v: *const fn (id: c_uint, buffer: c_uint, pname: Enum, offset: c_long) callconv(APIENTRY) void,
glGetQueryBufferObjectuiv: *const fn (id: c_uint, buffer: c_uint, pname: Enum, offset: c_long) callconv(APIENTRY) void,
glMemoryBarrierByRegion: *const fn (barriers: Bitfield) callconv(APIENTRY) void,
glGetTextureSubImage: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetCompressedTextureSubImage: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetGraphicsResetStatus: *const fn () callconv(APIENTRY) Enum,
glGetnCompressedTexImage: *const fn (target: Enum, lod: c_int, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetnTexImage: *const fn (target: Enum, level: c_int, format: Enum, @"type": Enum, bufSize: c_int, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetnUniformdv: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]f64) callconv(APIENTRY) void,
glGetnUniformfv: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]f32) callconv(APIENTRY) void,
glGetnUniformiv: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetnUniformuiv: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]c_uint) callconv(APIENTRY) void,
glReadnPixels: *const fn (x: c_int, y: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, bufSize: c_int, data: ?*anyopaque) callconv(APIENTRY) void,
glTextureBarrier: *const fn () callconv(APIENTRY) void,
glSpecializeShader: *const fn (shader: c_uint, pEntryPoint: [*c]const u8, numSpecializationConstants: c_uint, pConstantIndex: [*c]const c_uint, pConstantValue: [*c]const c_uint) callconv(APIENTRY) void,
glMultiDrawArraysIndirectCount: *const fn (mode: Enum, indirect: ?*const anyopaque, drawcount: c_long, maxdrawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glMultiDrawElementsIndirectCount: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque, drawcount: c_long, maxdrawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glPolygonOffsetClamp: *const fn (factor: f32, units: f32, clamp: f32) callconv(APIENTRY) void,
glPrimitiveBoundingBoxARB: *const fn (minX: f32, minY: f32, minZ: f32, minW: f32, maxX: f32, maxY: f32, maxZ: f32, maxW: f32) callconv(APIENTRY) void,
glGetTextureHandleARB: *const fn (texture: c_uint) callconv(APIENTRY) u64,
glGetTextureSamplerHandleARB: *const fn (texture: c_uint, sampler: c_uint) callconv(APIENTRY) u64,
glMakeTextureHandleResidentARB: *const fn (handle: u64) callconv(APIENTRY) void,
glMakeTextureHandleNonResidentARB: *const fn (handle: u64) callconv(APIENTRY) void,
glGetImageHandleARB: *const fn (texture: c_uint, level: c_int, layered: Boolean, layer: c_int, format: Enum) callconv(APIENTRY) u64,
glMakeImageHandleResidentARB: *const fn (handle: u64, access: Enum) callconv(APIENTRY) void,
glMakeImageHandleNonResidentARB: *const fn (handle: u64) callconv(APIENTRY) void,
glUniformHandleui64ARB: *const fn (location: c_int, value: u64) callconv(APIENTRY) void,
glUniformHandleui64vARB: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniformHandleui64ARB: *const fn (program: c_uint, location: c_int, value: u64) callconv(APIENTRY) void,
glProgramUniformHandleui64vARB: *const fn (program: c_uint, location: c_int, count: c_int, values: [*c]const u64) callconv(APIENTRY) void,
glIsTextureHandleResidentARB: *const fn (handle: u64) callconv(APIENTRY) Boolean,
glIsImageHandleResidentARB: *const fn (handle: u64) callconv(APIENTRY) Boolean,
glVertexAttribL1ui64ARB: *const fn (index: c_uint, x: u64) callconv(APIENTRY) void,
glVertexAttribL1ui64vARB: *const fn (index: c_uint, v: [*c]const u64) callconv(APIENTRY) void,
glGetVertexAttribLui64vARB: *const fn (index: c_uint, pname: Enum, params: [*c]u64) callconv(APIENTRY) void,
glCreateSyncFromCLeventARB: *const fn (context: ?*struct__cl_context, event: ?*struct__cl_event, flags: Bitfield) callconv(APIENTRY) Sync,
glDispatchComputeGroupSizeARB: *const fn (num_groups_x: c_uint, num_groups_y: c_uint, num_groups_z: c_uint, group_size_x: c_uint, group_size_y: c_uint, group_size_z: c_uint) callconv(APIENTRY) void,
glDebugMessageControlARB: *const fn (source: Enum, @"type": Enum, severity: Enum, count: c_int, ids: [*c]const c_uint, enabled: Boolean) callconv(APIENTRY) void,
glDebugMessageInsertARB: *const fn (source: Enum, @"type": Enum, id: c_uint, severity: Enum, length: c_int, buf: [*c]const u8) callconv(APIENTRY) void,
glDebugMessageCallbackARB: *const fn (callback: GLDEBUGPROCARB, userParam: ?*const anyopaque) callconv(APIENTRY) void,
glGetDebugMessageLogARB: *const fn (count: c_uint, bufSize: c_int, sources: [*c]Enum, types: [*c]Enum, ids: [*c]c_uint, severities: [*c]Enum, lengths: [*c]c_int, messageLog: [*c]u8) callconv(APIENTRY) c_uint,
glBlendEquationiARB: *const fn (buf: c_uint, mode: Enum) callconv(APIENTRY) void,
glBlendEquationSeparateiARB: *const fn (buf: c_uint, modeRGB: Enum, modeAlpha: Enum) callconv(APIENTRY) void,
glBlendFunciARB: *const fn (buf: c_uint, src: Enum, dst: Enum) callconv(APIENTRY) void,
glBlendFuncSeparateiARB: *const fn (buf: c_uint, srcRGB: Enum, dstRGB: Enum, srcAlpha: Enum, dstAlpha: Enum) callconv(APIENTRY) void,
glDrawArraysInstancedARB: *const fn (mode: Enum, first: c_int, count: c_int, primcount: c_int) callconv(APIENTRY) void,
glDrawElementsInstancedARB: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, primcount: c_int) callconv(APIENTRY) void,
glProgramParameteriARB: *const fn (program: c_uint, pname: Enum, value: c_int) callconv(APIENTRY) void,
glFramebufferTextureARB: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glFramebufferTextureLayerARB: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int, layer: c_int) callconv(APIENTRY) void,
glFramebufferTextureFaceARB: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int, face: Enum) callconv(APIENTRY) void,
glSpecializeShaderARB: *const fn (shader: c_uint, pEntryPoint: [*c]const u8, numSpecializationConstants: c_uint, pConstantIndex: [*c]const c_uint, pConstantValue: [*c]const c_uint) callconv(APIENTRY) void,
glUniform1i64ARB: *const fn (location: c_int, x: i64) callconv(APIENTRY) void,
glUniform2i64ARB: *const fn (location: c_int, x: i64, y: i64) callconv(APIENTRY) void,
glUniform3i64ARB: *const fn (location: c_int, x: i64, y: i64, z: i64) callconv(APIENTRY) void,
glUniform4i64ARB: *const fn (location: c_int, x: i64, y: i64, z: i64, w: i64) callconv(APIENTRY) void,
glUniform1i64vARB: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform2i64vARB: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform3i64vARB: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform4i64vARB: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform1ui64ARB: *const fn (location: c_int, x: u64) callconv(APIENTRY) void,
glUniform2ui64ARB: *const fn (location: c_int, x: u64, y: u64) callconv(APIENTRY) void,
glUniform3ui64ARB: *const fn (location: c_int, x: u64, y: u64, z: u64) callconv(APIENTRY) void,
glUniform4ui64ARB: *const fn (location: c_int, x: u64, y: u64, z: u64, w: u64) callconv(APIENTRY) void,
glUniform1ui64vARB: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform2ui64vARB: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform3ui64vARB: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform4ui64vARB: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glGetUniformi64vARB: *const fn (program: c_uint, location: c_int, params: [*c]i64) callconv(APIENTRY) void,
glGetUniformui64vARB: *const fn (program: c_uint, location: c_int, params: [*c]u64) callconv(APIENTRY) void,
glGetnUniformi64vARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]i64) callconv(APIENTRY) void,
glGetnUniformui64vARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]u64) callconv(APIENTRY) void,
glProgramUniform1i64ARB: *const fn (program: c_uint, location: c_int, x: i64) callconv(APIENTRY) void,
glProgramUniform2i64ARB: *const fn (program: c_uint, location: c_int, x: i64, y: i64) callconv(APIENTRY) void,
glProgramUniform3i64ARB: *const fn (program: c_uint, location: c_int, x: i64, y: i64, z: i64) callconv(APIENTRY) void,
glProgramUniform4i64ARB: *const fn (program: c_uint, location: c_int, x: i64, y: i64, z: i64, w: i64) callconv(APIENTRY) void,
glProgramUniform1i64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform2i64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform3i64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform4i64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform1ui64ARB: *const fn (program: c_uint, location: c_int, x: u64) callconv(APIENTRY) void,
glProgramUniform2ui64ARB: *const fn (program: c_uint, location: c_int, x: u64, y: u64) callconv(APIENTRY) void,
glProgramUniform3ui64ARB: *const fn (program: c_uint, location: c_int, x: u64, y: u64, z: u64) callconv(APIENTRY) void,
glProgramUniform4ui64ARB: *const fn (program: c_uint, location: c_int, x: u64, y: u64, z: u64, w: u64) callconv(APIENTRY) void,
glProgramUniform1ui64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform2ui64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform3ui64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform4ui64vARB: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glMultiDrawArraysIndirectCountARB: *const fn (mode: Enum, indirect: ?*const anyopaque, drawcount: c_long, maxdrawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glMultiDrawElementsIndirectCountARB: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque, drawcount: c_long, maxdrawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glVertexAttribDivisorARB: *const fn (index: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glMaxShaderCompilerThreadsARB: *const fn (count: c_uint) callconv(APIENTRY) void,
glGetGraphicsResetStatusARB: *const fn () callconv(APIENTRY) Enum,
glGetnTexImageARB: *const fn (target: Enum, level: c_int, format: Enum, @"type": Enum, bufSize: c_int, img: ?*anyopaque) callconv(APIENTRY) void,
glReadnPixelsARB: *const fn (x: c_int, y: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, bufSize: c_int, data: ?*anyopaque) callconv(APIENTRY) void,
glGetnCompressedTexImageARB: *const fn (target: Enum, lod: c_int, bufSize: c_int, img: ?*anyopaque) callconv(APIENTRY) void,
glGetnUniformfvARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]f32) callconv(APIENTRY) void,
glGetnUniformivARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetnUniformuivARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]c_uint) callconv(APIENTRY) void,
glGetnUniformdvARB: *const fn (program: c_uint, location: c_int, bufSize: c_int, params: [*c]f64) callconv(APIENTRY) void,
glFramebufferSampleLocationsfvARB: *const fn (target: Enum, start: c_uint, count: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glNamedFramebufferSampleLocationsfvARB: *const fn (framebuffer: c_uint, start: c_uint, count: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glEvaluateDepthValuesARB: *const fn () callconv(APIENTRY) void,
glMinSampleShadingARB: *const fn (value: f32) callconv(APIENTRY) void,
glNamedStringARB: *const fn (@"type": Enum, namelen: c_int, name: [*c]const u8, stringlen: c_int, string: [*c]const u8) callconv(APIENTRY) void,
glDeleteNamedStringARB: *const fn (namelen: c_int, name: [*c]const u8) callconv(APIENTRY) void,
glCompileShaderIncludeARB: *const fn (shader: c_uint, count: c_int, path: [*c]const [*c]const u8, length: [*c]const c_int) callconv(APIENTRY) void,
glIsNamedStringARB: *const fn (namelen: c_int, name: [*c]const u8) callconv(APIENTRY) Boolean,
glGetNamedStringARB: *const fn (namelen: c_int, name: [*c]const u8, bufSize: c_int, stringlen: [*c]c_int, string: [*c]u8) callconv(APIENTRY) void,
glGetNamedStringivARB: *const fn (namelen: c_int, name: [*c]const u8, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glBufferPageCommitmentARB: *const fn (target: Enum, offset: c_long, size: c_ulong, commit: Boolean) callconv(APIENTRY) void,
glNamedBufferPageCommitmentEXT: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, commit: Boolean) callconv(APIENTRY) void,
glNamedBufferPageCommitmentARB: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, commit: Boolean) callconv(APIENTRY) void,
glTexPageCommitmentARB: *const fn (target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, commit: Boolean) callconv(APIENTRY) void,
glTexBufferARB: *const fn (target: Enum, internalformat: Enum, buffer: c_uint) callconv(APIENTRY) void,
glDepthRangeArraydvNV: *const fn (first: c_uint, count: c_int, v: [*c]const f64) callconv(APIENTRY) void,
glDepthRangeIndexeddNV: *const fn (index: c_uint, n: f64, f: f64) callconv(APIENTRY) void,
glBlendBarrierKHR: *const fn () callconv(APIENTRY) void,
glMaxShaderCompilerThreadsKHR: *const fn (count: c_uint) callconv(APIENTRY) void,
glRenderbufferStorageMultisampleAdvancedAMD: *const fn (target: Enum, samples: c_int, storageSamples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glNamedRenderbufferStorageMultisampleAdvancedAMD: *const fn (renderbuffer: c_uint, samples: c_int, storageSamples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetPerfMonitorGroupsAMD: *const fn (numGroups: [*c]c_int, groupsSize: c_int, groups: [*c]c_uint) callconv(APIENTRY) void,
glGetPerfMonitorCountersAMD: *const fn (group: c_uint, numCounters: [*c]c_int, maxActiveCounters: [*c]c_int, counterSize: c_int, counters: [*c]c_uint) callconv(APIENTRY) void,
glGetPerfMonitorGroupStringAMD: *const fn (group: c_uint, bufSize: c_int, length: [*c]c_int, groupString: [*c]u8) callconv(APIENTRY) void,
glGetPerfMonitorCounterStringAMD: *const fn (group: c_uint, counter: c_uint, bufSize: c_int, length: [*c]c_int, counterString: [*c]u8) callconv(APIENTRY) void,
glGetPerfMonitorCounterInfoAMD: *const fn (group: c_uint, counter: c_uint, pname: Enum, data: ?*anyopaque) callconv(APIENTRY) void,
glGenPerfMonitorsAMD: *const fn (n: c_int, monitors: [*c]c_uint) callconv(APIENTRY) void,
glDeletePerfMonitorsAMD: *const fn (n: c_int, monitors: [*c]c_uint) callconv(APIENTRY) void,
glSelectPerfMonitorCountersAMD: *const fn (monitor: c_uint, enable: Boolean, group: c_uint, numCounters: c_int, counterList: [*c]c_uint) callconv(APIENTRY) void,
glBeginPerfMonitorAMD: *const fn (monitor: c_uint) callconv(APIENTRY) void,
glEndPerfMonitorAMD: *const fn (monitor: c_uint) callconv(APIENTRY) void,
glGetPerfMonitorCounterDataAMD: *const fn (monitor: c_uint, pname: Enum, dataSize: c_int, data: [*c]c_uint, bytesWritten: [*c]c_int) callconv(APIENTRY) void,
glEGLImageTargetTexStorageEXT: *const fn (target: Enum, image: GLeglImageOES, attrib_list: [*c]const c_int) callconv(APIENTRY) void,
glEGLImageTargetTextureStorageEXT: *const fn (texture: c_uint, image: GLeglImageOES, attrib_list: [*c]const c_int) callconv(APIENTRY) void,
glLabelObjectEXT: *const fn (@"type": Enum, object: c_uint, length: c_int, label: [*c]const u8) callconv(APIENTRY) void,
glGetObjectLabelEXT: *const fn (@"type": Enum, object: c_uint, bufSize: c_int, length: [*c]c_int, label: [*c]u8) callconv(APIENTRY) void,
glInsertEventMarkerEXT: *const fn (length: c_int, marker: [*c]const u8) callconv(APIENTRY) void,
glPushGroupMarkerEXT: *const fn (length: c_int, marker: [*c]const u8) callconv(APIENTRY) void,
glPopGroupMarkerEXT: *const fn () callconv(APIENTRY) void,
glMatrixLoadfEXT: *const fn (mode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixLoaddEXT: *const fn (mode: Enum, m: [*c]const f64) callconv(APIENTRY) void,
glMatrixMultfEXT: *const fn (mode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixMultdEXT: *const fn (mode: Enum, m: [*c]const f64) callconv(APIENTRY) void,
glMatrixLoadIdentityEXT: *const fn (mode: Enum) callconv(APIENTRY) void,
glMatrixRotatefEXT: *const fn (mode: Enum, angle: f32, x: f32, y: f32, z: f32) callconv(APIENTRY) void,
glMatrixRotatedEXT: *const fn (mode: Enum, angle: f64, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glMatrixScalefEXT: *const fn (mode: Enum, x: f32, y: f32, z: f32) callconv(APIENTRY) void,
glMatrixScaledEXT: *const fn (mode: Enum, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glMatrixTranslatefEXT: *const fn (mode: Enum, x: f32, y: f32, z: f32) callconv(APIENTRY) void,
glMatrixTranslatedEXT: *const fn (mode: Enum, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glMatrixFrustumEXT: *const fn (mode: Enum, left: f64, right: f64, bottom: f64, top: f64, zNear: f64, zFar: f64) callconv(APIENTRY) void,
glMatrixOrthoEXT: *const fn (mode: Enum, left: f64, right: f64, bottom: f64, top: f64, zNear: f64, zFar: f64) callconv(APIENTRY) void,
glMatrixPopEXT: *const fn (mode: Enum) callconv(APIENTRY) void,
glMatrixPushEXT: *const fn (mode: Enum) callconv(APIENTRY) void,
glClientAttribDefaultEXT: *const fn (mask: Bitfield) callconv(APIENTRY) void,
glPushClientAttribDefaultEXT: *const fn (mask: Bitfield) callconv(APIENTRY) void,
glTextureParameterfEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, param: f32) callconv(APIENTRY) void,
glTextureParameterfvEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glTextureParameteriEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glTextureParameterivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glTextureImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: c_int, width: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureSubImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureSubImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCopyTextureImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, border: c_int) callconv(APIENTRY) void,
glCopyTextureImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, height: c_int, border: c_int) callconv(APIENTRY) void,
glCopyTextureSubImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, x: c_int, y: c_int, width: c_int) callconv(APIENTRY) void,
glCopyTextureSubImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetTextureImageEXT: *const fn (texture: c_uint, target: Enum, level: c_int, format: Enum, @"type": Enum, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetTextureParameterfvEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTextureParameterivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTextureLevelParameterfvEXT: *const fn (texture: c_uint, target: Enum, level: c_int, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetTextureLevelParameterivEXT: *const fn (texture: c_uint, target: Enum, level: c_int, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glTextureImage3DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, depth: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glTextureSubImage3DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCopyTextureSubImage3DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glBindMultiTextureEXT: *const fn (texunit: Enum, target: Enum, texture: c_uint) callconv(APIENTRY) void,
glMultiTexCoordPointerEXT: *const fn (texunit: Enum, size: c_int, @"type": Enum, stride: c_int, pointer: ?*const anyopaque) callconv(APIENTRY) void,
glMultiTexEnvfEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, param: f32) callconv(APIENTRY) void,
glMultiTexEnvfvEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glMultiTexEnviEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glMultiTexEnvivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glMultiTexGendEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, param: f64) callconv(APIENTRY) void,
glMultiTexGendvEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]const f64) callconv(APIENTRY) void,
glMultiTexGenfEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, param: f32) callconv(APIENTRY) void,
glMultiTexGenfvEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glMultiTexGeniEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glMultiTexGenivEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glGetMultiTexEnvfvEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetMultiTexEnvivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetMultiTexGendvEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]f64) callconv(APIENTRY) void,
glGetMultiTexGenfvEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetMultiTexGenivEXT: *const fn (texunit: Enum, coord: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glMultiTexParameteriEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glMultiTexParameterivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glMultiTexParameterfEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, param: f32) callconv(APIENTRY) void,
glMultiTexParameterfvEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const f32) callconv(APIENTRY) void,
glMultiTexImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: c_int, width: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glMultiTexImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glMultiTexSubImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glMultiTexSubImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCopyMultiTexImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, border: c_int) callconv(APIENTRY) void,
glCopyMultiTexImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: Enum, x: c_int, y: c_int, width: c_int, height: c_int, border: c_int) callconv(APIENTRY) void,
glCopyMultiTexSubImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, x: c_int, y: c_int, width: c_int) callconv(APIENTRY) void,
glCopyMultiTexSubImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetMultiTexImageEXT: *const fn (texunit: Enum, target: Enum, level: c_int, format: Enum, @"type": Enum, pixels: ?*anyopaque) callconv(APIENTRY) void,
glGetMultiTexParameterfvEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetMultiTexParameterivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetMultiTexLevelParameterfvEXT: *const fn (texunit: Enum, target: Enum, level: c_int, pname: Enum, params: [*c]f32) callconv(APIENTRY) void,
glGetMultiTexLevelParameterivEXT: *const fn (texunit: Enum, target: Enum, level: c_int, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glMultiTexImage3DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: c_int, width: c_int, height: c_int, depth: c_int, border: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glMultiTexSubImage3DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, @"type": Enum, pixels: ?*const anyopaque) callconv(APIENTRY) void,
glCopyMultiTexSubImage3DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glEnableClientStateIndexedEXT: *const fn (array: Enum, index: c_uint) callconv(APIENTRY) void,
glDisableClientStateIndexedEXT: *const fn (array: Enum, index: c_uint) callconv(APIENTRY) void,
glGetFloatIndexedvEXT: *const fn (target: Enum, index: c_uint, data: [*c]f32) callconv(APIENTRY) void,
glGetDoubleIndexedvEXT: *const fn (target: Enum, index: c_uint, data: [*c]f64) callconv(APIENTRY) void,
glGetPointerIndexedvEXT: *const fn (target: Enum, index: c_uint, data: [*c]?*anyopaque) callconv(APIENTRY) void,
glEnableIndexedEXT: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) void,
glDisableIndexedEXT: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) void,
glIsEnabledIndexedEXT: *const fn (target: Enum, index: c_uint) callconv(APIENTRY) Boolean,
glGetIntegerIndexedvEXT: *const fn (target: Enum, index: c_uint, data: [*c]c_int) callconv(APIENTRY) void,
glGetBooleanIndexedvEXT: *const fn (target: Enum, index: c_uint, data: [*c]Boolean) callconv(APIENTRY) void,
glCompressedTextureImage3DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, internalformat: Enum, width: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage3DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage2DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedTextureSubImage1DEXT: *const fn (texture: c_uint, target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glGetCompressedTextureImageEXT: *const fn (texture: c_uint, target: Enum, lod: c_int, img: ?*anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexImage3DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: Enum, width: c_int, height: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, internalformat: Enum, width: c_int, border: c_int, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexSubImage3DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexSubImage2DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, yoffset: c_int, width: c_int, height: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glCompressedMultiTexSubImage1DEXT: *const fn (texunit: Enum, target: Enum, level: c_int, xoffset: c_int, width: c_int, format: Enum, imageSize: c_int, bits: ?*const anyopaque) callconv(APIENTRY) void,
glGetCompressedMultiTexImageEXT: *const fn (texunit: Enum, target: Enum, lod: c_int, img: ?*anyopaque) callconv(APIENTRY) void,
glMatrixLoadTransposefEXT: *const fn (mode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixLoadTransposedEXT: *const fn (mode: Enum, m: [*c]const f64) callconv(APIENTRY) void,
glMatrixMultTransposefEXT: *const fn (mode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixMultTransposedEXT: *const fn (mode: Enum, m: [*c]const f64) callconv(APIENTRY) void,
glNamedBufferDataEXT: *const fn (buffer: c_uint, size: c_ulong, data: ?*const anyopaque, usage: Enum) callconv(APIENTRY) void,
glNamedBufferSubDataEXT: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, data: ?*const anyopaque) callconv(APIENTRY) void,
glMapNamedBufferEXT: *const fn (buffer: c_uint, access: Enum) callconv(APIENTRY) ?*anyopaque,
glUnmapNamedBufferEXT: *const fn (buffer: c_uint) callconv(APIENTRY) Boolean,
glGetNamedBufferParameterivEXT: *const fn (buffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetNamedBufferPointervEXT: *const fn (buffer: c_uint, pname: Enum, params: [*c]?*anyopaque) callconv(APIENTRY) void,
glGetNamedBufferSubDataEXT: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, data: ?*anyopaque) callconv(APIENTRY) void,
glProgramUniform1fEXT: *const fn (program: c_uint, location: c_int, v0: f32) callconv(APIENTRY) void,
glProgramUniform2fEXT: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32) callconv(APIENTRY) void,
glProgramUniform3fEXT: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32, v2: f32) callconv(APIENTRY) void,
glProgramUniform4fEXT: *const fn (program: c_uint, location: c_int, v0: f32, v1: f32, v2: f32, v3: f32) callconv(APIENTRY) void,
glProgramUniform1iEXT: *const fn (program: c_uint, location: c_int, v0: c_int) callconv(APIENTRY) void,
glProgramUniform2iEXT: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int) callconv(APIENTRY) void,
glProgramUniform3iEXT: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int, v2: c_int) callconv(APIENTRY) void,
glProgramUniform4iEXT: *const fn (program: c_uint, location: c_int, v0: c_int, v1: c_int, v2: c_int, v3: c_int) callconv(APIENTRY) void,
glProgramUniform1fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform2fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform3fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform4fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniform1ivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform2ivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform3ivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniform4ivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_int) callconv(APIENTRY) void,
glProgramUniformMatrix2fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix2x3fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3x2fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix2x4fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4x2fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix3x4fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glProgramUniformMatrix4x3fvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f32) callconv(APIENTRY) void,
glTextureBufferEXT: *const fn (texture: c_uint, target: Enum, internalformat: Enum, buffer: c_uint) callconv(APIENTRY) void,
glMultiTexBufferEXT: *const fn (texunit: Enum, target: Enum, internalformat: Enum, buffer: c_uint) callconv(APIENTRY) void,
glTextureParameterIivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glTextureParameterIuivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]const c_uint) callconv(APIENTRY) void,
glGetTextureParameterIivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetTextureParameterIuivEXT: *const fn (texture: c_uint, target: Enum, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glMultiTexParameterIivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const c_int) callconv(APIENTRY) void,
glMultiTexParameterIuivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]const c_uint) callconv(APIENTRY) void,
glGetMultiTexParameterIivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetMultiTexParameterIuivEXT: *const fn (texunit: Enum, target: Enum, pname: Enum, params: [*c]c_uint) callconv(APIENTRY) void,
glProgramUniform1uiEXT: *const fn (program: c_uint, location: c_int, v0: c_uint) callconv(APIENTRY) void,
glProgramUniform2uiEXT: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint) callconv(APIENTRY) void,
glProgramUniform3uiEXT: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint, v2: c_uint) callconv(APIENTRY) void,
glProgramUniform4uiEXT: *const fn (program: c_uint, location: c_int, v0: c_uint, v1: c_uint, v2: c_uint, v3: c_uint) callconv(APIENTRY) void,
glProgramUniform1uivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform2uivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform3uivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glProgramUniform4uivEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const c_uint) callconv(APIENTRY) void,
glNamedProgramLocalParameters4fvEXT: *const fn (program: c_uint, target: Enum, index: c_uint, count: c_int, params: [*c]const f32) callconv(APIENTRY) void,
glNamedProgramLocalParameterI4iEXT: *const fn (program: c_uint, target: Enum, index: c_uint, x: c_int, y: c_int, z: c_int, w: c_int) callconv(APIENTRY) void,
glNamedProgramLocalParameterI4ivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]const c_int) callconv(APIENTRY) void,
glNamedProgramLocalParametersI4ivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, count: c_int, params: [*c]const c_int) callconv(APIENTRY) void,
glNamedProgramLocalParameterI4uiEXT: *const fn (program: c_uint, target: Enum, index: c_uint, x: c_uint, y: c_uint, z: c_uint, w: c_uint) callconv(APIENTRY) void,
glNamedProgramLocalParameterI4uivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]const c_uint) callconv(APIENTRY) void,
glNamedProgramLocalParametersI4uivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, count: c_int, params: [*c]const c_uint) callconv(APIENTRY) void,
glGetNamedProgramLocalParameterIivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]c_int) callconv(APIENTRY) void,
glGetNamedProgramLocalParameterIuivEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]c_uint) callconv(APIENTRY) void,
glEnableClientStateiEXT: *const fn (array: Enum, index: c_uint) callconv(APIENTRY) void,
glDisableClientStateiEXT: *const fn (array: Enum, index: c_uint) callconv(APIENTRY) void,
glGetFloati_vEXT: *const fn (pname: Enum, index: c_uint, params: [*c]f32) callconv(APIENTRY) void,
glGetDoublei_vEXT: *const fn (pname: Enum, index: c_uint, params: [*c]f64) callconv(APIENTRY) void,
glGetPointeri_vEXT: *const fn (pname: Enum, index: c_uint, params: [*c]?*anyopaque) callconv(APIENTRY) void,
glNamedProgramStringEXT: *const fn (program: c_uint, target: Enum, format: Enum, len: c_int, string: ?*const anyopaque) callconv(APIENTRY) void,
glNamedProgramLocalParameter4dEXT: *const fn (program: c_uint, target: Enum, index: c_uint, x: f64, y: f64, z: f64, w: f64) callconv(APIENTRY) void,
glNamedProgramLocalParameter4dvEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]const f64) callconv(APIENTRY) void,
glNamedProgramLocalParameter4fEXT: *const fn (program: c_uint, target: Enum, index: c_uint, x: f32, y: f32, z: f32, w: f32) callconv(APIENTRY) void,
glNamedProgramLocalParameter4fvEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]const f32) callconv(APIENTRY) void,
glGetNamedProgramLocalParameterdvEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]f64) callconv(APIENTRY) void,
glGetNamedProgramLocalParameterfvEXT: *const fn (program: c_uint, target: Enum, index: c_uint, params: [*c]f32) callconv(APIENTRY) void,
glGetNamedProgramivEXT: *const fn (program: c_uint, target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGetNamedProgramStringEXT: *const fn (program: c_uint, target: Enum, pname: Enum, string: ?*anyopaque) callconv(APIENTRY) void,
glNamedRenderbufferStorageEXT: *const fn (renderbuffer: c_uint, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glGetNamedRenderbufferParameterivEXT: *const fn (renderbuffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glNamedRenderbufferStorageMultisampleEXT: *const fn (renderbuffer: c_uint, samples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glNamedRenderbufferStorageMultisampleCoverageEXT: *const fn (renderbuffer: c_uint, coverageSamples: c_int, colorSamples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glCheckNamedFramebufferStatusEXT: *const fn (framebuffer: c_uint, target: Enum) callconv(APIENTRY) Enum,
glNamedFramebufferTexture1DEXT: *const fn (framebuffer: c_uint, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glNamedFramebufferTexture2DEXT: *const fn (framebuffer: c_uint, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glNamedFramebufferTexture3DEXT: *const fn (framebuffer: c_uint, attachment: Enum, textarget: Enum, texture: c_uint, level: c_int, zoffset: c_int) callconv(APIENTRY) void,
glNamedFramebufferRenderbufferEXT: *const fn (framebuffer: c_uint, attachment: Enum, renderbuffertarget: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glGetNamedFramebufferAttachmentParameterivEXT: *const fn (framebuffer: c_uint, attachment: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glGenerateTextureMipmapEXT: *const fn (texture: c_uint, target: Enum) callconv(APIENTRY) void,
glGenerateMultiTexMipmapEXT: *const fn (texunit: Enum, target: Enum) callconv(APIENTRY) void,
glFramebufferDrawBufferEXT: *const fn (framebuffer: c_uint, mode: Enum) callconv(APIENTRY) void,
glFramebufferDrawBuffersEXT: *const fn (framebuffer: c_uint, n: c_int, bufs: [*c]const Enum) callconv(APIENTRY) void,
glFramebufferReadBufferEXT: *const fn (framebuffer: c_uint, mode: Enum) callconv(APIENTRY) void,
glGetFramebufferParameterivEXT: *const fn (framebuffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glNamedCopyBufferSubDataEXT: *const fn (readBuffer: c_uint, writeBuffer: c_uint, readOffset: c_long, writeOffset: c_long, size: c_ulong) callconv(APIENTRY) void,
glNamedFramebufferTextureEXT: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int) callconv(APIENTRY) void,
glNamedFramebufferTextureLayerEXT: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int, layer: c_int) callconv(APIENTRY) void,
glNamedFramebufferTextureFaceEXT: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int, face: Enum) callconv(APIENTRY) void,
glTextureRenderbufferEXT: *const fn (texture: c_uint, target: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glMultiTexRenderbufferEXT: *const fn (texunit: Enum, target: Enum, renderbuffer: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayColorOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayEdgeFlagOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayIndexOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayNormalOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayTexCoordOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayMultiTexCoordOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, texunit: Enum, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayFogCoordOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArraySecondaryColorOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayVertexAttribOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, index: c_uint, size: c_int, @"type": Enum, normalized: Boolean, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glVertexArrayVertexAttribIOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, index: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glEnableVertexArrayEXT: *const fn (vaobj: c_uint, array: Enum) callconv(APIENTRY) void,
glDisableVertexArrayEXT: *const fn (vaobj: c_uint, array: Enum) callconv(APIENTRY) void,
glEnableVertexArrayAttribEXT: *const fn (vaobj: c_uint, index: c_uint) callconv(APIENTRY) void,
glDisableVertexArrayAttribEXT: *const fn (vaobj: c_uint, index: c_uint) callconv(APIENTRY) void,
glGetVertexArrayIntegervEXT: *const fn (vaobj: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetVertexArrayPointervEXT: *const fn (vaobj: c_uint, pname: Enum, param: [*c]?*anyopaque) callconv(APIENTRY) void,
glGetVertexArrayIntegeri_vEXT: *const fn (vaobj: c_uint, index: c_uint, pname: Enum, param: [*c]c_int) callconv(APIENTRY) void,
glGetVertexArrayPointeri_vEXT: *const fn (vaobj: c_uint, index: c_uint, pname: Enum, param: [*c]?*anyopaque) callconv(APIENTRY) void,
glMapNamedBufferRangeEXT: *const fn (buffer: c_uint, offset: c_long, length: c_ulong, access: Bitfield) callconv(APIENTRY) ?*anyopaque,
glFlushMappedNamedBufferRangeEXT: *const fn (buffer: c_uint, offset: c_long, length: c_ulong) callconv(APIENTRY) void,
glNamedBufferStorageEXT: *const fn (buffer: c_uint, size: c_ulong, data: ?*const anyopaque, flags: Bitfield) callconv(APIENTRY) void,
glClearNamedBufferDataEXT: *const fn (buffer: c_uint, internalformat: Enum, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glClearNamedBufferSubDataEXT: *const fn (buffer: c_uint, internalformat: Enum, offset: c_ulong, size: c_ulong, format: Enum, @"type": Enum, data: ?*const anyopaque) callconv(APIENTRY) void,
glNamedFramebufferParameteriEXT: *const fn (framebuffer: c_uint, pname: Enum, param: c_int) callconv(APIENTRY) void,
glGetNamedFramebufferParameterivEXT: *const fn (framebuffer: c_uint, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glProgramUniform1dEXT: *const fn (program: c_uint, location: c_int, x: f64) callconv(APIENTRY) void,
glProgramUniform2dEXT: *const fn (program: c_uint, location: c_int, x: f64, y: f64) callconv(APIENTRY) void,
glProgramUniform3dEXT: *const fn (program: c_uint, location: c_int, x: f64, y: f64, z: f64) callconv(APIENTRY) void,
glProgramUniform4dEXT: *const fn (program: c_uint, location: c_int, x: f64, y: f64, z: f64, w: f64) callconv(APIENTRY) void,
glProgramUniform1dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform2dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform3dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniform4dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix2dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix2x3dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix2x4dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3x2dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix3x4dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4x2dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glProgramUniformMatrix4x3dvEXT: *const fn (program: c_uint, location: c_int, count: c_int, transpose: Boolean, value: [*c]const f64) callconv(APIENTRY) void,
glTextureBufferRangeEXT: *const fn (texture: c_uint, target: Enum, internalformat: Enum, buffer: c_uint, offset: c_long, size: c_ulong) callconv(APIENTRY) void,
glTextureStorage1DEXT: *const fn (texture: c_uint, target: Enum, levels: c_int, internalformat: Enum, width: c_int) callconv(APIENTRY) void,
glTextureStorage2DEXT: *const fn (texture: c_uint, target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glTextureStorage3DEXT: *const fn (texture: c_uint, target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int) callconv(APIENTRY) void,
glTextureStorage2DMultisampleEXT: *const fn (texture: c_uint, target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glTextureStorage3DMultisampleEXT: *const fn (texture: c_uint, target: Enum, samples: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glVertexArrayBindVertexBufferEXT: *const fn (vaobj: c_uint, bindingindex: c_uint, buffer: c_uint, offset: c_long, stride: c_int) callconv(APIENTRY) void,
glVertexArrayVertexAttribFormatEXT: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, normalized: Boolean, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexAttribIFormatEXT: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexAttribLFormatEXT: *const fn (vaobj: c_uint, attribindex: c_uint, size: c_int, @"type": Enum, relativeoffset: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexAttribBindingEXT: *const fn (vaobj: c_uint, attribindex: c_uint, bindingindex: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexBindingDivisorEXT: *const fn (vaobj: c_uint, bindingindex: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glVertexArrayVertexAttribLOffsetEXT: *const fn (vaobj: c_uint, buffer: c_uint, index: c_uint, size: c_int, @"type": Enum, stride: c_int, offset: c_long) callconv(APIENTRY) void,
glTexturePageCommitmentEXT: *const fn (texture: c_uint, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, commit: Boolean) callconv(APIENTRY) void,
glVertexArrayVertexAttribDivisorEXT: *const fn (vaobj: c_uint, index: c_uint, divisor: c_uint) callconv(APIENTRY) void,
glDrawArraysInstancedEXT: *const fn (mode: Enum, start: c_int, count: c_int, primcount: c_int) callconv(APIENTRY) void,
glDrawElementsInstancedEXT: *const fn (mode: Enum, count: c_int, @"type": Enum, indices: ?*const anyopaque, primcount: c_int) callconv(APIENTRY) void,
glPolygonOffsetClampEXT: *const fn (factor: f32, units: f32, clamp: f32) callconv(APIENTRY) void,
glRasterSamplesEXT: *const fn (samples: c_uint, fixedsamplelocations: Boolean) callconv(APIENTRY) void,
glUseShaderProgramEXT: *const fn (@"type": Enum, program: c_uint) callconv(APIENTRY) void,
glActiveProgramEXT: *const fn (program: c_uint) callconv(APIENTRY) void,
glCreateShaderProgramEXT: *const fn (@"type": Enum, string: [*c]const u8) callconv(APIENTRY) c_uint,
glFramebufferFetchBarrierEXT: *const fn () callconv(APIENTRY) void,
glTexStorage1DEXT: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int) callconv(APIENTRY) void,
glTexStorage2DEXT: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glTexStorage3DEXT: *const fn (target: Enum, levels: c_int, internalformat: Enum, width: c_int, height: c_int, depth: c_int) callconv(APIENTRY) void,
glWindowRectanglesEXT: *const fn (mode: Enum, count: c_int, box: [*c]const c_int) callconv(APIENTRY) void,
glApplyFramebufferAttachmentCMAAINTEL: *const fn () callconv(APIENTRY) void,
glBeginPerfQueryINTEL: *const fn (queryHandle: c_uint) callconv(APIENTRY) void,
glCreatePerfQueryINTEL: *const fn (queryId: c_uint, queryHandle: [*c]c_uint) callconv(APIENTRY) void,
glDeletePerfQueryINTEL: *const fn (queryHandle: c_uint) callconv(APIENTRY) void,
glEndPerfQueryINTEL: *const fn (queryHandle: c_uint) callconv(APIENTRY) void,
glGetFirstPerfQueryIdINTEL: *const fn (queryId: [*c]c_uint) callconv(APIENTRY) void,
glGetNextPerfQueryIdINTEL: *const fn (queryId: c_uint, nextQueryId: [*c]c_uint) callconv(APIENTRY) void,
glGetPerfCounterInfoINTEL: *const fn (queryId: c_uint, counterId: c_uint, counterNameLength: c_uint, counterName: [*c]u8, counterDescLength: c_uint, counterDesc: [*c]u8, counterOffset: [*c]c_uint, counterDataSize: [*c]c_uint, counterTypeEnum: [*c]c_uint, counterDataTypeEnum: [*c]c_uint, rawCounterMaxValue: [*c]u64) callconv(APIENTRY) void,
glGetPerfQueryDataINTEL: *const fn (queryHandle: c_uint, flags: c_uint, dataSize: c_int, data: ?*anyopaque, bytesWritten: [*c]c_uint) callconv(APIENTRY) void,
glGetPerfQueryIdByNameINTEL: *const fn (queryName: [*c]u8, queryId: [*c]c_uint) callconv(APIENTRY) void,
glGetPerfQueryInfoINTEL: *const fn (queryId: c_uint, queryNameLength: c_uint, queryName: [*c]u8, dataSize: [*c]c_uint, noCounters: [*c]c_uint, noInstances: [*c]c_uint, capsMask: [*c]c_uint) callconv(APIENTRY) void,
glFramebufferParameteriMESA: *const fn (target: Enum, pname: Enum, param: c_int) callconv(APIENTRY) void,
glGetFramebufferParameterivMESA: *const fn (target: Enum, pname: Enum, params: [*c]c_int) callconv(APIENTRY) void,
glMultiDrawArraysIndirectBindlessNV: *const fn (mode: Enum, indirect: ?*const anyopaque, drawCount: c_int, stride: c_int, vertexBufferCount: c_int) callconv(APIENTRY) void,
glMultiDrawElementsIndirectBindlessNV: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque, drawCount: c_int, stride: c_int, vertexBufferCount: c_int) callconv(APIENTRY) void,
glMultiDrawArraysIndirectBindlessCountNV: *const fn (mode: Enum, indirect: ?*const anyopaque, drawCount: c_int, maxDrawCount: c_int, stride: c_int, vertexBufferCount: c_int) callconv(APIENTRY) void,
glMultiDrawElementsIndirectBindlessCountNV: *const fn (mode: Enum, @"type": Enum, indirect: ?*const anyopaque, drawCount: c_int, maxDrawCount: c_int, stride: c_int, vertexBufferCount: c_int) callconv(APIENTRY) void,
glGetTextureHandleNV: *const fn (texture: c_uint) callconv(APIENTRY) u64,
glGetTextureSamplerHandleNV: *const fn (texture: c_uint, sampler: c_uint) callconv(APIENTRY) u64,
glMakeTextureHandleResidentNV: *const fn (handle: u64) callconv(APIENTRY) void,
glMakeTextureHandleNonResidentNV: *const fn (handle: u64) callconv(APIENTRY) void,
glGetImageHandleNV: *const fn (texture: c_uint, level: c_int, layered: Boolean, layer: c_int, format: Enum) callconv(APIENTRY) u64,
glMakeImageHandleResidentNV: *const fn (handle: u64, access: Enum) callconv(APIENTRY) void,
glMakeImageHandleNonResidentNV: *const fn (handle: u64) callconv(APIENTRY) void,
glUniformHandleui64NV: *const fn (location: c_int, value: u64) callconv(APIENTRY) void,
glUniformHandleui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniformHandleui64NV: *const fn (program: c_uint, location: c_int, value: u64) callconv(APIENTRY) void,
glProgramUniformHandleui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, values: [*c]const u64) callconv(APIENTRY) void,
glIsTextureHandleResidentNV: *const fn (handle: u64) callconv(APIENTRY) Boolean,
glIsImageHandleResidentNV: *const fn (handle: u64) callconv(APIENTRY) Boolean,
glBlendParameteriNV: *const fn (pname: Enum, value: c_int) callconv(APIENTRY) void,
glBlendBarrierNV: *const fn () callconv(APIENTRY) void,
glViewportPositionWScaleNV: *const fn (index: c_uint, xcoeff: f32, ycoeff: f32) callconv(APIENTRY) void,
glCreateStatesNV: *const fn (n: c_int, states: [*c]c_uint) callconv(APIENTRY) void,
glDeleteStatesNV: *const fn (n: c_int, states: [*c]const c_uint) callconv(APIENTRY) void,
glIsStateNV: *const fn (state: c_uint) callconv(APIENTRY) Boolean,
glStateCaptureNV: *const fn (state: c_uint, mode: Enum) callconv(APIENTRY) void,
glGetCommandHeaderNV: *const fn (tokenID: Enum, size: c_uint) callconv(APIENTRY) c_uint,
glGetStageIndexNV: *const fn (shadertype: Enum) callconv(APIENTRY) c_ushort,
glDrawCommandsNV: *const fn (primitiveMode: Enum, buffer: c_uint, indirects: [*c]const c_long, sizes: [*c]const c_int, count: c_uint) callconv(APIENTRY) void,
glDrawCommandsAddressNV: *const fn (primitiveMode: Enum, indirects: [*c]const u64, sizes: [*c]const c_int, count: c_uint) callconv(APIENTRY) void,
glDrawCommandsStatesNV: *const fn (buffer: c_uint, indirects: [*c]const c_long, sizes: [*c]const c_int, states: [*c]const c_uint, fbos: [*c]const c_uint, count: c_uint) callconv(APIENTRY) void,
glDrawCommandsStatesAddressNV: *const fn (indirects: [*c]const u64, sizes: [*c]const c_int, states: [*c]const c_uint, fbos: [*c]const c_uint, count: c_uint) callconv(APIENTRY) void,
glCreateCommandListsNV: *const fn (n: c_int, lists: [*c]c_uint) callconv(APIENTRY) void,
glDeleteCommandListsNV: *const fn (n: c_int, lists: [*c]const c_uint) callconv(APIENTRY) void,
glIsCommandListNV: *const fn (list: c_uint) callconv(APIENTRY) Boolean,
glListDrawCommandsStatesClientNV: *const fn (list: c_uint, segment: c_uint, indirects: [*c]?*const anyopaque, sizes: [*c]const c_int, states: [*c]const c_uint, fbos: [*c]const c_uint, count: c_uint) callconv(APIENTRY) void,
glCommandListSegmentsNV: *const fn (list: c_uint, segments: c_uint) callconv(APIENTRY) void,
glCompileCommandListNV: *const fn (list: c_uint) callconv(APIENTRY) void,
glCallCommandListNV: *const fn (list: c_uint) callconv(APIENTRY) void,
glBeginConditionalRenderNV: *const fn (id: c_uint, mode: Enum) callconv(APIENTRY) void,
glEndConditionalRenderNV: *const fn () callconv(APIENTRY) void,
glSubpixelPrecisionBiasNV: *const fn (xbits: c_uint, ybits: c_uint) callconv(APIENTRY) void,
glConservativeRasterParameterfNV: *const fn (pname: Enum, value: f32) callconv(APIENTRY) void,
glConservativeRasterParameteriNV: *const fn (pname: Enum, param: c_int) callconv(APIENTRY) void,
glDepthRangedNV: *const fn (zNear: f64, zFar: f64) callconv(APIENTRY) void,
glClearDepthdNV: *const fn (depth: f64) callconv(APIENTRY) void,
glDepthBoundsdNV: *const fn (zmin: f64, zmax: f64) callconv(APIENTRY) void,
glDrawVkImageNV: *const fn (vkImage: u64, sampler: c_uint, x0: f32, y0: f32, x1: f32, y1: f32, z: f32, s0: f32, t0: f32, s1: f32, t1: f32) callconv(APIENTRY) void,
glGetVkProcAddrNV: *const fn (name: [*c]const u8) callconv(APIENTRY) GLVULKANPROCNV,
glWaitVkSemaphoreNV: *const fn (vkSemaphore: u64) callconv(APIENTRY) void,
glSignalVkSemaphoreNV: *const fn (vkSemaphore: u64) callconv(APIENTRY) void,
glSignalVkFenceNV: *const fn (vkFence: u64) callconv(APIENTRY) void,
glFragmentCoverageColorNV: *const fn (color: c_uint) callconv(APIENTRY) void,
glCoverageModulationTableNV: *const fn (n: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glGetCoverageModulationTableNV: *const fn (bufSize: c_int, v: [*c]f32) callconv(APIENTRY) void,
glCoverageModulationNV: *const fn (components: Enum) callconv(APIENTRY) void,
glRenderbufferStorageMultisampleCoverageNV: *const fn (target: Enum, coverageSamples: c_int, colorSamples: c_int, internalformat: Enum, width: c_int, height: c_int) callconv(APIENTRY) void,
glUniform1i64NV: *const fn (location: c_int, x: i64) callconv(APIENTRY) void,
glUniform2i64NV: *const fn (location: c_int, x: i64, y: i64) callconv(APIENTRY) void,
glUniform3i64NV: *const fn (location: c_int, x: i64, y: i64, z: i64) callconv(APIENTRY) void,
glUniform4i64NV: *const fn (location: c_int, x: i64, y: i64, z: i64, w: i64) callconv(APIENTRY) void,
glUniform1i64vNV: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform2i64vNV: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform3i64vNV: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform4i64vNV: *const fn (location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glUniform1ui64NV: *const fn (location: c_int, x: u64) callconv(APIENTRY) void,
glUniform2ui64NV: *const fn (location: c_int, x: u64, y: u64) callconv(APIENTRY) void,
glUniform3ui64NV: *const fn (location: c_int, x: u64, y: u64, z: u64) callconv(APIENTRY) void,
glUniform4ui64NV: *const fn (location: c_int, x: u64, y: u64, z: u64, w: u64) callconv(APIENTRY) void,
glUniform1ui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform2ui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform3ui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glUniform4ui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glGetUniformi64vNV: *const fn (program: c_uint, location: c_int, params: [*c]i64) callconv(APIENTRY) void,
glProgramUniform1i64NV: *const fn (program: c_uint, location: c_int, x: i64) callconv(APIENTRY) void,
glProgramUniform2i64NV: *const fn (program: c_uint, location: c_int, x: i64, y: i64) callconv(APIENTRY) void,
glProgramUniform3i64NV: *const fn (program: c_uint, location: c_int, x: i64, y: i64, z: i64) callconv(APIENTRY) void,
glProgramUniform4i64NV: *const fn (program: c_uint, location: c_int, x: i64, y: i64, z: i64, w: i64) callconv(APIENTRY) void,
glProgramUniform1i64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform2i64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform3i64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform4i64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const i64) callconv(APIENTRY) void,
glProgramUniform1ui64NV: *const fn (program: c_uint, location: c_int, x: u64) callconv(APIENTRY) void,
glProgramUniform2ui64NV: *const fn (program: c_uint, location: c_int, x: u64, y: u64) callconv(APIENTRY) void,
glProgramUniform3ui64NV: *const fn (program: c_uint, location: c_int, x: u64, y: u64, z: u64) callconv(APIENTRY) void,
glProgramUniform4ui64NV: *const fn (program: c_uint, location: c_int, x: u64, y: u64, z: u64, w: u64) callconv(APIENTRY) void,
glProgramUniform1ui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform2ui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform3ui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glProgramUniform4ui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glGetInternalformatSampleivNV: *const fn (target: Enum, internalformat: Enum, samples: c_int, pname: Enum, count: c_int, params: [*c]c_int) callconv(APIENTRY) void,
glGetMemoryObjectDetachedResourcesuivNV: *const fn (memory: c_uint, pname: Enum, first: c_int, count: c_int, params: [*c]c_uint) callconv(APIENTRY) void,
glResetMemoryObjectParameterNV: *const fn (memory: c_uint, pname: Enum) callconv(APIENTRY) void,
glTexAttachMemoryNV: *const fn (target: Enum, memory: c_uint, offset: u64) callconv(APIENTRY) void,
glBufferAttachMemoryNV: *const fn (target: Enum, memory: c_uint, offset: u64) callconv(APIENTRY) void,
glTextureAttachMemoryNV: *const fn (texture: c_uint, memory: c_uint, offset: u64) callconv(APIENTRY) void,
glNamedBufferAttachMemoryNV: *const fn (buffer: c_uint, memory: c_uint, offset: u64) callconv(APIENTRY) void,
glBufferPageCommitmentMemNV: *const fn (target: Enum, offset: c_long, size: c_ulong, memory: c_uint, memOffset: u64, commit: Boolean) callconv(APIENTRY) void,
glTexPageCommitmentMemNV: *const fn (target: Enum, layer: c_int, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, memory: c_uint, offset: u64, commit: Boolean) callconv(APIENTRY) void,
glNamedBufferPageCommitmentMemNV: *const fn (buffer: c_uint, offset: c_long, size: c_ulong, memory: c_uint, memOffset: u64, commit: Boolean) callconv(APIENTRY) void,
glTexturePageCommitmentMemNV: *const fn (texture: c_uint, layer: c_int, level: c_int, xoffset: c_int, yoffset: c_int, zoffset: c_int, width: c_int, height: c_int, depth: c_int, memory: c_uint, offset: u64, commit: Boolean) callconv(APIENTRY) void,
glDrawMeshTasksNV: *const fn (first: c_uint, count: c_uint) callconv(APIENTRY) void,
glDrawMeshTasksIndirectNV: *const fn (indirect: c_long) callconv(APIENTRY) void,
glMultiDrawMeshTasksIndirectNV: *const fn (indirect: c_long, drawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glMultiDrawMeshTasksIndirectCountNV: *const fn (indirect: c_long, drawcount: c_long, maxdrawcount: c_int, stride: c_int) callconv(APIENTRY) void,
glGenPathsNV: *const fn (range: c_int) callconv(APIENTRY) c_uint,
glDeletePathsNV: *const fn (path: c_uint, range: c_int) callconv(APIENTRY) void,
glIsPathNV: *const fn (path: c_uint) callconv(APIENTRY) Boolean,
glPathCommandsNV: *const fn (path: c_uint, numCommands: c_int, commands: [*c]const u8, numCoords: c_int, coordType: Enum, coords: ?*const anyopaque) callconv(APIENTRY) void,
glPathCoordsNV: *const fn (path: c_uint, numCoords: c_int, coordType: Enum, coords: ?*const anyopaque) callconv(APIENTRY) void,
glPathSubCommandsNV: *const fn (path: c_uint, commandStart: c_int, commandsToDelete: c_int, numCommands: c_int, commands: [*c]const u8, numCoords: c_int, coordType: Enum, coords: ?*const anyopaque) callconv(APIENTRY) void,
glPathSubCoordsNV: *const fn (path: c_uint, coordStart: c_int, numCoords: c_int, coordType: Enum, coords: ?*const anyopaque) callconv(APIENTRY) void,
glPathStringNV: *const fn (path: c_uint, format: Enum, length: c_int, pathString: ?*const anyopaque) callconv(APIENTRY) void,
glPathGlyphsNV: *const fn (firstPathName: c_uint, fontTarget: Enum, fontName: ?*const anyopaque, fontStyle: Bitfield, numGlyphs: c_int, @"type": Enum, charcodes: ?*const anyopaque, handleMissingGlyphs: Enum, pathParameterTemplate: c_uint, emScale: f32) callconv(APIENTRY) void,
glPathGlyphRangeNV: *const fn (firstPathName: c_uint, fontTarget: Enum, fontName: ?*const anyopaque, fontStyle: Bitfield, firstGlyph: c_uint, numGlyphs: c_int, handleMissingGlyphs: Enum, pathParameterTemplate: c_uint, emScale: f32) callconv(APIENTRY) void,
glWeightPathsNV: *const fn (resultPath: c_uint, numPaths: c_int, paths: [*c]const c_uint, weights: [*c]const f32) callconv(APIENTRY) void,
glCopyPathNV: *const fn (resultPath: c_uint, srcPath: c_uint) callconv(APIENTRY) void,
glInterpolatePathsNV: *const fn (resultPath: c_uint, pathA: c_uint, pathB: c_uint, weight: f32) callconv(APIENTRY) void,
glTransformPathNV: *const fn (resultPath: c_uint, srcPath: c_uint, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glPathParameterivNV: *const fn (path: c_uint, pname: Enum, value: [*c]const c_int) callconv(APIENTRY) void,
glPathParameteriNV: *const fn (path: c_uint, pname: Enum, value: c_int) callconv(APIENTRY) void,
glPathParameterfvNV: *const fn (path: c_uint, pname: Enum, value: [*c]const f32) callconv(APIENTRY) void,
glPathParameterfNV: *const fn (path: c_uint, pname: Enum, value: f32) callconv(APIENTRY) void,
glPathDashArrayNV: *const fn (path: c_uint, dashCount: c_int, dashArray: [*c]const f32) callconv(APIENTRY) void,
glPathStencilFuncNV: *const fn (func: Enum, ref: c_int, mask: c_uint) callconv(APIENTRY) void,
glPathStencilDepthOffsetNV: *const fn (factor: f32, units: f32) callconv(APIENTRY) void,
glStencilFillPathNV: *const fn (path: c_uint, fillMode: Enum, mask: c_uint) callconv(APIENTRY) void,
glStencilStrokePathNV: *const fn (path: c_uint, reference: c_int, mask: c_uint) callconv(APIENTRY) void,
glStencilFillPathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, fillMode: Enum, mask: c_uint, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glStencilStrokePathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, reference: c_int, mask: c_uint, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glPathCoverDepthFuncNV: *const fn (func: Enum) callconv(APIENTRY) void,
glCoverFillPathNV: *const fn (path: c_uint, coverMode: Enum) callconv(APIENTRY) void,
glCoverStrokePathNV: *const fn (path: c_uint, coverMode: Enum) callconv(APIENTRY) void,
glCoverFillPathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, coverMode: Enum, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glCoverStrokePathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, coverMode: Enum, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glGetPathParameterivNV: *const fn (path: c_uint, pname: Enum, value: [*c]c_int) callconv(APIENTRY) void,
glGetPathParameterfvNV: *const fn (path: c_uint, pname: Enum, value: [*c]f32) callconv(APIENTRY) void,
glGetPathCommandsNV: *const fn (path: c_uint, commands: [*c]u8) callconv(APIENTRY) void,
glGetPathCoordsNV: *const fn (path: c_uint, coords: [*c]f32) callconv(APIENTRY) void,
glGetPathDashArrayNV: *const fn (path: c_uint, dashArray: [*c]f32) callconv(APIENTRY) void,
glGetPathMetricsNV: *const fn (metricQueryMask: Bitfield, numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, stride: c_int, metrics: [*c]f32) callconv(APIENTRY) void,
glGetPathMetricRangeNV: *const fn (metricQueryMask: Bitfield, firstPathName: c_uint, numPaths: c_int, stride: c_int, metrics: [*c]f32) callconv(APIENTRY) void,
glGetPathSpacingNV: *const fn (pathListMode: Enum, numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, advanceScale: f32, kerningScale: f32, transformType: Enum, returnedSpacing: [*c]f32) callconv(APIENTRY) void,
glIsPointInFillPathNV: *const fn (path: c_uint, mask: c_uint, x: f32, y: f32) callconv(APIENTRY) Boolean,
glIsPointInStrokePathNV: *const fn (path: c_uint, x: f32, y: f32) callconv(APIENTRY) Boolean,
glGetPathLengthNV: *const fn (path: c_uint, startSegment: c_int, numSegments: c_int) callconv(APIENTRY) f32,
glPointAlongPathNV: *const fn (path: c_uint, startSegment: c_int, numSegments: c_int, distance: f32, x: [*c]f32, y: [*c]f32, tangentX: [*c]f32, tangentY: [*c]f32) callconv(APIENTRY) Boolean,
glMatrixLoad3x2fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixLoad3x3fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixLoadTranspose3x3fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixMult3x2fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixMult3x3fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glMatrixMultTranspose3x3fNV: *const fn (matrixMode: Enum, m: [*c]const f32) callconv(APIENTRY) void,
glStencilThenCoverFillPathNV: *const fn (path: c_uint, fillMode: Enum, mask: c_uint, coverMode: Enum) callconv(APIENTRY) void,
glStencilThenCoverStrokePathNV: *const fn (path: c_uint, reference: c_int, mask: c_uint, coverMode: Enum) callconv(APIENTRY) void,
glStencilThenCoverFillPathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, fillMode: Enum, mask: c_uint, coverMode: Enum, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glStencilThenCoverStrokePathInstancedNV: *const fn (numPaths: c_int, pathNameType: Enum, paths: ?*const anyopaque, pathBase: c_uint, reference: c_int, mask: c_uint, coverMode: Enum, transformType: Enum, transformValues: [*c]const f32) callconv(APIENTRY) void,
glPathGlyphIndexRangeNV: *const fn (fontTarget: Enum, fontName: ?*const anyopaque, fontStyle: Bitfield, pathParameterTemplate: c_uint, emScale: f32, baseAndCount: [*c]c_uint) callconv(APIENTRY) Enum,
glPathGlyphIndexArrayNV: *const fn (firstPathName: c_uint, fontTarget: Enum, fontName: ?*const anyopaque, fontStyle: Bitfield, firstGlyphIndex: c_uint, numGlyphs: c_int, pathParameterTemplate: c_uint, emScale: f32) callconv(APIENTRY) Enum,
glPathMemoryGlyphIndexArrayNV: *const fn (firstPathName: c_uint, fontTarget: Enum, fontSize: c_ulong, fontData: ?*const anyopaque, faceIndex: c_int, firstGlyphIndex: c_uint, numGlyphs: c_int, pathParameterTemplate: c_uint, emScale: f32) callconv(APIENTRY) Enum,
glProgramPathFragmentInputGenNV: *const fn (program: c_uint, location: c_int, genMode: Enum, components: c_int, coeffs: [*c]const f32) callconv(APIENTRY) void,
glGetProgramResourcefvNV: *const fn (program: c_uint, programInterface: Enum, index: c_uint, propCount: c_int, props: [*c]const Enum, count: c_int, length: [*c]c_int, params: [*c]f32) callconv(APIENTRY) void,
glFramebufferSampleLocationsfvNV: *const fn (target: Enum, start: c_uint, count: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glNamedFramebufferSampleLocationsfvNV: *const fn (framebuffer: c_uint, start: c_uint, count: c_int, v: [*c]const f32) callconv(APIENTRY) void,
glResolveDepthValuesNV: *const fn () callconv(APIENTRY) void,
glScissorExclusiveNV: *const fn (x: c_int, y: c_int, width: c_int, height: c_int) callconv(APIENTRY) void,
glScissorExclusiveArrayvNV: *const fn (first: c_uint, count: c_int, v: [*c]const c_int) callconv(APIENTRY) void,
glMakeBufferResidentNV: *const fn (target: Enum, access: Enum) callconv(APIENTRY) void,
glMakeBufferNonResidentNV: *const fn (target: Enum) callconv(APIENTRY) void,
glIsBufferResidentNV: *const fn (target: Enum) callconv(APIENTRY) Boolean,
glMakeNamedBufferResidentNV: *const fn (buffer: c_uint, access: Enum) callconv(APIENTRY) void,
glMakeNamedBufferNonResidentNV: *const fn (buffer: c_uint) callconv(APIENTRY) void,
glIsNamedBufferResidentNV: *const fn (buffer: c_uint) callconv(APIENTRY) Boolean,
glGetBufferParameterui64vNV: *const fn (target: Enum, pname: Enum, params: [*c]u64) callconv(APIENTRY) void,
glGetNamedBufferParameterui64vNV: *const fn (buffer: c_uint, pname: Enum, params: [*c]u64) callconv(APIENTRY) void,
glGetIntegerui64vNV: *const fn (value: Enum, result: [*c]u64) callconv(APIENTRY) void,
glUniformui64NV: *const fn (location: c_int, value: u64) callconv(APIENTRY) void,
glUniformui64vNV: *const fn (location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glGetUniformui64vNV: *const fn (program: c_uint, location: c_int, params: [*c]u64) callconv(APIENTRY) void,
glProgramUniformui64NV: *const fn (program: c_uint, location: c_int, value: u64) callconv(APIENTRY) void,
glProgramUniformui64vNV: *const fn (program: c_uint, location: c_int, count: c_int, value: [*c]const u64) callconv(APIENTRY) void,
glBindShadingRateImageNV: *const fn (texture: c_uint) callconv(APIENTRY) void,
glGetShadingRateImagePaletteNV: *const fn (viewport: c_uint, entry: c_uint, rate: [*c]Enum) callconv(APIENTRY) void,
glGetShadingRateSampleLocationivNV: *const fn (rate: Enum, samples: c_uint, index: c_uint, location: [*c]c_int) callconv(APIENTRY) void,
glShadingRateImageBarrierNV: *const fn (synchronize: Boolean) callconv(APIENTRY) void,
glShadingRateImagePaletteNV: *const fn (viewport: c_uint, first: c_uint, count: c_int, rates: [*c]const Enum) callconv(APIENTRY) void,
glShadingRateSampleOrderNV: *const fn (order: Enum) callconv(APIENTRY) void,
glShadingRateSampleOrderCustomNV: *const fn (rate: Enum, samples: c_uint, locations: [*c]const c_int) callconv(APIENTRY) void,
glTextureBarrierNV: *const fn () callconv(APIENTRY) void,
glVertexAttribL1i64NV: *const fn (index: c_uint, x: i64) callconv(APIENTRY) void,
glVertexAttribL2i64NV: *const fn (index: c_uint, x: i64, y: i64) callconv(APIENTRY) void,
glVertexAttribL3i64NV: *const fn (index: c_uint, x: i64, y: i64, z: i64) callconv(APIENTRY) void,
glVertexAttribL4i64NV: *const fn (index: c_uint, x: i64, y: i64, z: i64, w: i64) callconv(APIENTRY) void,
glVertexAttribL1i64vNV: *const fn (index: c_uint, v: [*c]const i64) callconv(APIENTRY) void,
glVertexAttribL2i64vNV: *const fn (index: c_uint, v: [*c]const i64) callconv(APIENTRY) void,
glVertexAttribL3i64vNV: *const fn (index: c_uint, v: [*c]const i64) callconv(APIENTRY) void,
glVertexAttribL4i64vNV: *const fn (index: c_uint, v: [*c]const i64) callconv(APIENTRY) void,
glVertexAttribL1ui64NV: *const fn (index: c_uint, x: u64) callconv(APIENTRY) void,
glVertexAttribL2ui64NV: *const fn (index: c_uint, x: u64, y: u64) callconv(APIENTRY) void,
glVertexAttribL3ui64NV: *const fn (index: c_uint, x: u64, y: u64, z: u64) callconv(APIENTRY) void,
glVertexAttribL4ui64NV: *const fn (index: c_uint, x: u64, y: u64, z: u64, w: u64) callconv(APIENTRY) void,
glVertexAttribL1ui64vNV: *const fn (index: c_uint, v: [*c]const u64) callconv(APIENTRY) void,
glVertexAttribL2ui64vNV: *const fn (index: c_uint, v: [*c]const u64) callconv(APIENTRY) void,
glVertexAttribL3ui64vNV: *const fn (index: c_uint, v: [*c]const u64) callconv(APIENTRY) void,
glVertexAttribL4ui64vNV: *const fn (index: c_uint, v: [*c]const u64) callconv(APIENTRY) void,
glGetVertexAttribLi64vNV: *const fn (index: c_uint, pname: Enum, params: [*c]i64) callconv(APIENTRY) void,
glGetVertexAttribLui64vNV: *const fn (index: c_uint, pname: Enum, params: [*c]u64) callconv(APIENTRY) void,
glVertexAttribLFormatNV: *const fn (index: c_uint, size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glBufferAddressRangeNV: *const fn (pname: Enum, index: c_uint, address: u64, length: c_ulong) callconv(APIENTRY) void,
glVertexFormatNV: *const fn (size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glNormalFormatNV: *const fn (@"type": Enum, stride: c_int) callconv(APIENTRY) void,
glColorFormatNV: *const fn (size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glIndexFormatNV: *const fn (@"type": Enum, stride: c_int) callconv(APIENTRY) void,
glTexCoordFormatNV: *const fn (size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glEdgeFlagFormatNV: *const fn (stride: c_int) callconv(APIENTRY) void,
glSecondaryColorFormatNV: *const fn (size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glFogCoordFormatNV: *const fn (@"type": Enum, stride: c_int) callconv(APIENTRY) void,
glVertexAttribFormatNV: *const fn (index: c_uint, size: c_int, @"type": Enum, normalized: Boolean, stride: c_int) callconv(APIENTRY) void,
glVertexAttribIFormatNV: *const fn (index: c_uint, size: c_int, @"type": Enum, stride: c_int) callconv(APIENTRY) void,
glGetIntegerui64i_vNV: *const fn (value: Enum, index: c_uint, result: [*c]u64) callconv(APIENTRY) void,
glViewportSwizzleNV: *const fn (index: c_uint, swizzlex: Enum, swizzley: Enum, swizzlez: Enum, swizzlew: Enum) callconv(APIENTRY) void,
glFramebufferTextureMultiviewOVR: *const fn (target: Enum, attachment: Enum, texture: c_uint, level: c_int, baseViewIndex: c_int, numViews: c_int) callconv(APIENTRY) void,
glNamedFramebufferTextureMultiviewOVR: *const fn (framebuffer: c_uint, attachment: Enum, texture: c_uint, level: c_int, baseViewIndex: c_int, numViews: c_int) void,

pub fn init(loader: anytype) !@This() {
    var procs: @This() = undefined;
    inline for (@typeInfo(@TypeOf(procs)).@"struct".fields) |proc| {
        @field(procs, proc.name) = @ptrCast(loader(proc.name) orelse return error.ProcNotFound);
    }
    return procs;
}
